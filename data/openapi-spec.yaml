---
openapi: 3.0.1
basePath: https://3dna.nbuild.dev
info:
  title: NationBuilder V2 API
  version: '2.0'
externalDocs:
  description: Get started with the NationBuilder API
  url: https://nationbuilder.com/api_quickstart
paths:
  "/api/v2/async_processes/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Show async process with provided token ID
      tags:
      - Async Processes
      description: Show async process with provided token ID
      operationId: showAsyncProcess
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: d1f0c6679ce9cac177a499baad5d4f66
                  status:
                    type: string
                    example: completed
                  message:
                    type: string
                    example: Completed at 2024-09-04 17:18:22 +0000
  "/api/v2/automation_enrollments":
    parameters:
    - "$ref": "#/components/parameters/automation_enrollment_index_include"
    - "$ref": "#/components/parameters/automation_enrollment_sparse_fields"
    post:
      summary: Create an automation enrollment
      tags:
      - Automation Enrollments
      description: Creates an automation enrollment from given data
      operationId: createAutomationEnrollments
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/automation_enrollment_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/automation_enrollment_create_request"
    get:
      summary: List all automation enrollments in a nation
      tags:
      - Automation Enrollments
      description: Lists all automation enrollments
      operationId: listAutomationEnrollments
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/automation_enrollment_index_response"
  "/api/v2/automation_enrollments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Show automation enrollments with provided ID
      tags:
      - Automation Enrollments
      description: Show automation enrollments with provided ID
      operationId: showAutomationEnrollments
      parameters:
      - "$ref": "#/components/parameters/automation_enrollment_show_include"
      - "$ref": "#/components/parameters/automation_enrollment_sparse_fields"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/automation_enrollment_show_response"
    delete:
      summary: Delete automation enrollments with provided ID
      tags:
      - Automation Enrollments
      description: Delete automation enrollments with provided ID
      operationId: deleteAutomationEnrollments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/automations":
    parameters:
    - "$ref": "#/components/parameters/automation_index_include"
    - "$ref": "#/components/parameters/automation_sparse_fields"
    get:
      summary: List all automations in a nation
      tags:
      - Automations
      description: Lists all automations
      operationId: listAutomations
      parameters:
      - "$ref": "#/components/parameters/automation_extra_fields"
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/automation_index_response"
    post:
      summary: Create an automation
      tags:
      - Automations
      description: Creates an automation from given data
      operationId: createAutomation
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/automation_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/automation_create_request"
  "/api/v2/automations/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/automation_show_include"
    - "$ref": "#/components/parameters/automation_sparse_fields"
    - "$ref": "#/components/parameters/automation_extra_fields"
    get:
      summary: Show automation with provided ID
      tags:
      - Automations
      description: Show automation with provided ID
      operationId: showAutomations
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/automation_show_response"
    patch:
      summary: Update an existing automation
      tags:
      - Automations
      description: Updates an existing automation
      operationId: updateAutomation
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/automation_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/automation_update_request"
  "/api/v2/automations/{id}/archive":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/automation_show_include"
    patch:
      summary: Archive an existing automation
      tags:
      - Automations
      description: Archives an existing automation
      operationId: archiveAutomation
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/automation_show_response"
  "/api/v2/ballots":
    parameters:
    - "$ref": "#/components/parameters/ballot_index_include"
    - "$ref": "#/components/parameters/ballot_sparse_fields"
    post:
      summary: Create a ballot
      tags:
      - Ballots
      description: Creates a ballot from given data
      operationId: createBallot
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ballot_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ballot_create_request"
    get:
      summary: List all ballots in a nation
      tags:
      - Ballots
      description: Lists all ballots
      operationId: listBallots
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ballot_index_response"
  "/api/v2/ballots/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/ballot_show_include"
    - "$ref": "#/components/parameters/ballot_sparse_fields"
    get:
      summary: Show ballot with provided ID
      tags:
      - Ballots
      description: 'Show ballot with provided ID '
      operationId: showBallot
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ballot_show_response"
    patch:
      summary: Update an existing ballot
      tags:
      - Ballots
      description: Updates an existing ballot
      operationId: updateBallot
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ballot_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ballot_update_request"
    delete:
      summary: Delete ballot with provided ID
      tags:
      - Ballots
      description: Delete ballot with provided ID
      operationId: deleteBallot
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/broadcasters":
    parameters:
    - "$ref": "#/components/parameters/broadcaster_index_include"
    - "$ref": "#/components/parameters/broadcaster_sparse_fields"
    get:
      summary: List all broadcasters in a nation
      tags:
      - Broadcasters
      description: Lists all broadcasters
      operationId: listBroadcasters
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/broadcaster_index_response"
  "/api/v2/broadcasters/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/broadcaster_show_include"
    - "$ref": "#/components/parameters/broadcaster_sparse_fields"
    get:
      summary: Show broadcaster with provided ID
      tags:
      - Broadcasters
      description: Show broadcaster with provided ID
      operationId: showBroadcaster
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/broadcaster_show_response"
  "/api/v2/contacts":
    parameters:
    - "$ref": "#/components/parameters/contact_index_include"
    - "$ref": "#/components/parameters/contact_sparse_fields"
    post:
      summary: Create a contact
      tags:
      - Contacts
      description: Creates a contact from given data
      operationId: createContacts
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/contact_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/contact_create_request"
    get:
      summary: List all contacts in a nation
      tags:
      - Contacts
      description: Lists all contacts
      operationId: listContacts
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/contact_index_response"
  "/api/v2/contacts/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/contact_show_include"
    - "$ref": "#/components/parameters/contact_sparse_fields"
    get:
      summary: Show contact with provided ID
      tags:
      - Contacts
      description: Show contact with provided ID
      operationId: showContacts
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/contact_show_response"
    patch:
      summary: Update an existing contact
      tags:
      - Contacts
      description: Updates an existing contact
      operationId: updateContacts
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/contact_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/contact_update_request"
    delete:
      summary: Delete contact with provided ID
      tags:
      - Contacts
      description: Delete contact with provided ID
      operationId: deleteContacts
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/custom_fields":
    parameters:
    - "$ref": "#/components/parameters/custom_field_index_include"
    - "$ref": "#/components/parameters/custom_field_sparse_fields"
    get:
      summary: List all custom fields in a nation
      tags:
      - Custom Fields
      description: Lists all custom fields
      operationId: listCustomFields
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/custom_field_index_response"
  "/api/v2/custom_fields/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/custom_field_show_include"
    - "$ref": "#/components/parameters/custom_field_sparse_fields"
    get:
      summary: Show custom field with provided ID
      tags:
      - Custom Fields
      description: Show custom field with provided ID
      operationId: showCustomField
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/custom_field_show_response"
  "/api/v2/donation_tracking_codes":
    parameters:
    - "$ref": "#/components/parameters/donation_tracking_code_index_include"
    - "$ref": "#/components/parameters/donation_tracking_code_sparse_fields"
    post:
      summary: Create a donation tracking code
      tags:
      - Donation Tracking Codes
      description: Creates a donation tracking code from given data
      operationId: createDonationTrackingCode
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/donation_tracking_code_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/donation_tracking_code_create_request"
    get:
      summary: List all donation tracking codes in a nation
      tags:
      - Donation Tracking Codes
      description: Lists all donation tracking codes
      operationId: listDonationTrackingCodes
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/donation_tracking_code_index_response"
  "/api/v2/donation_tracking_codes/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/donation_tracking_code_show_include"
    - "$ref": "#/components/parameters/donation_tracking_code_sparse_fields"
    get:
      summary: Show donation tracking code with provided ID
      tags:
      - Donation Tracking Codes
      description: Show donation tracking code with provided ID
      operationId: showDonationTrackingCode
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/donation_tracking_code_show_response"
    patch:
      summary: Update an existing donation tracking code
      tags:
      - Donation Tracking Codes
      description: Updates an existing donation tracking code
      operationId: updateDonationTrackingCode
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/donation_tracking_code_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/donation_tracking_code_update_request"
    delete:
      summary: Delete donation tracking code with provided ID
      tags:
      - Donation Tracking Codes
      description: Delete donation tracking code with provided ID
      operationId: deleteDonationTrackingCode
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/donations":
    parameters:
    - "$ref": "#/components/parameters/donation_index_include"
    - "$ref": "#/components/parameters/donation_sparse_fields"
    post:
      summary: Create a donation
      tags:
      - Donations
      description: Creates a donation from given data
      operationId: createDonation
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/donation_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/donation_create_request"
    get:
      summary: List all donations in a nation
      tags:
      - Donations
      description: Lists all donations
      operationId: listDonations
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/donation_index_response"
  "/api/v2/donations/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/donation_show_include"
    - "$ref": "#/components/parameters/donation_sparse_fields"
    get:
      summary: Show donation with provided ID
      tags:
      - Donations
      description: Show donation with provided ID
      operationId: showDonation
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/donation_show_response"
    patch:
      summary: Update an existing donation
      tags:
      - Donations
      description: Updates an existing donation
      operationId: updateDonation
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/donation_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/donation_update_request"
    delete:
      summary: Delete donation with provided ID
      tags:
      - Donations
      description: Delete donation with provided ID
      operationId: deleteDonation
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/elections":
    parameters:
    - "$ref": "#/components/parameters/election_index_include"
    - "$ref": "#/components/parameters/election_sparse_fields"
    post:
      summary: Create a election
      tags:
      - Elections
      description: Creates a election from given data
      operationId: createElection
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/election_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/election_create_request"
    get:
      summary: List all elections in a nation
      tags:
      - Elections
      description: Lists all elections
      operationId: listElections
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/election_index_response"
  "/api/v2/elections/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/election_show_include"
    - "$ref": "#/components/parameters/election_sparse_fields"
    get:
      summary: Show election with provided ID
      tags:
      - Elections
      description: Show election with provided ID
      operationId: showElection
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/election_show_response"
    patch:
      summary: Update an existing election
      tags:
      - Elections
      description: Updates an existing election
      operationId: updateElection
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/election_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/election_update_request"
    delete:
      summary: Delete election with provided ID
      tags:
      - Elections
      description: Delete election with provided ID
      operationId: deleteElection
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/event_rsvps":
    parameters:
    - "$ref": "#/components/parameters/event_rsvp_index_include"
    - "$ref": "#/components/parameters/event_rsvp_sparse_fields"
    post:
      summary: Create an event rsvp
      tags:
      - Event Rsvps
      description: Creates an event RSVP. Event RSVPs must contain enough signup data
        to find an existing signup in the nation, or create a new one. This means
        callers must provide a first name, last name, and email as part of the Event
        RSVP payload, which will be matched to an existing signup or will create a
        new signup with that data. Alternatively, callers may sidepost a signup resource
        as part of the payload. See sideposting documentation for details.
      operationId: createEventRsvp
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_rsvp_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/event_rsvp_create_request"
    get:
      summary: List all event rsvps in a nation
      tags:
      - Event Rsvps
      description: Lists all event RSVPs in a nation
      operationId: listEventRsvps
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_rsvp_index_response"
  "/api/v2/event_rsvps/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/event_rsvp_show_include"
    - "$ref": "#/components/parameters/event_rsvp_sparse_fields"
    get:
      summary: Show event rsvp with provided ID
      tags:
      - Event Rsvps
      description: Show the event RSVP matching the provided ID
      operationId: showEventRsvp
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_rsvp_show_response"
    patch:
      summary: Update an existing event rsvp
      tags:
      - Event Rsvps
      description: Updates an existing event RSVP. Note that first name, last name,
        and email are NOT propagated to the event RSVP's signup. You must update the
        signup via a sidepost payload, or update the signup directly via the signup
        resource.
      operationId: updateEventRsvp
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_rsvp_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/event_rsvp_update_request"
    delete:
      summary: Delete an event rsvp with provided ID
      tags:
      - Event Rsvps
      description: Delete the event RSVP matching the provided ID
      operationId: deleteEventRsvp
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/event_ticket_levels":
    parameters:
    - "$ref": "#/components/parameters/event_ticket_level_index_include"
    - "$ref": "#/components/parameters/event_ticket_level_sparse_fields"
    post:
      summary: Create an event ticket level
      tags:
      - Event Ticket Levels
      description: Creates an event ticket level. Ticket levels must be associated
        with an event, have a name, a number indicating how many tickets are included
        in a single purchase, a limit indicating the max number of tickets that can
        be sold, and an amount in cents indicating the cost of purchasing tickets
        at this ticket level.
      operationId: createEventTicketLevel
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_ticket_level_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/event_ticket_level_create_request"
    get:
      summary: List all event ticket levels in a nation
      tags:
      - Event Ticket Levels
      description: Lists all event ticket levels in the nation. To request ticket
        levels for a specific event, filter on event_id using query filtering, `filter[event_id]=123`.
        Both the Event and Event RSVPs associated with a ticket level can be sideloaded.
      operationId: listEventTicketLevels
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_ticket_level_index_response"
  "/api/v2/event_ticket_levels/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/event_ticket_level_show_include"
    - "$ref": "#/components/parameters/event_ticket_level_sparse_fields"
    get:
      summary: Show event ticket level with provided ID
      tags:
      - Event Ticket Levels
      description: Show event ticket level with provided ID
      operationId: showEventTicketLevel
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_ticket_level_show_response"
    patch:
      summary: Update an existing event ticket level
      tags:
      - Event Ticket Levels
      description: Updates an existing event ticket level with values provided in
        the payload.
      operationId: updateEventTicketLevel
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_ticket_level_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/event_ticket_level_update_request"
    delete:
      summary: Delete event ticket level with provided ID
      tags:
      - Event Ticket Levels
      description: Delete event ticket level with provided ID
      operationId: deleteEventTicketLevel
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/events":
    parameters:
    - "$ref": "#/components/parameters/event_index_include"
    - "$ref": "#/components/parameters/event_sparse_fields"
    post:
      summary: Create an event
      tags:
      - Events
      description: Create events with the provided payload. Events must be created
        with a page resource, which can be sideposted as shown in the example payload.
        Events must also have a start_at time.
      operationId: createEvent
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/event_create_request"
    get:
      summary: List all events in a nation
      tags:
      - Events
      description: Lists all events within a nation.
      operationId: listEvents
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_index_response"
  "/api/v2/events/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/event_show_include"
    - "$ref": "#/components/parameters/event_sparse_fields"
    get:
      summary: Show event with provided ID
      tags:
      - Events
      description: Show event with provided ID
      operationId: showEvent
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_show_response"
    patch:
      summary: Update an existing event
      tags:
      - Events
      description: Updates an existing event
      operationId: updateEvent
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/event_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/event_update_request"
    delete:
      summary: Delete event with provided ID
      tags:
      - Events
      description: Delete event with provided ID
      operationId: deleteEvent
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/imports":
    parameters:
    - "$ref": "#/components/parameters/import_index_include"
    - "$ref": "#/components/parameters/import_sparse_fields"
    get:
      summary: List all imports in a nation
      tags:
      - Imports
      description: List all imports
      operationId: listImports
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/import_index_response"
  "/api/v2/imports/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/import_show_include"
    - "$ref": "#/components/parameters/import_sparse_fields"
    get:
      summary: Show import with provided ID
      tags:
      - Imports
      description: Show import with provided ID
      operationId: showImport
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/import_show_response"
  "/api/v2/lists":
    parameters:
    - "$ref": "#/components/parameters/list_index_include"
    - "$ref": "#/components/parameters/list_sparse_fields"
    post:
      summary: Create a list
      tags:
      - Lists
      description: Creates a list from given data
      operationId: createList
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/list_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_create_request"
    get:
      summary: List all lists in a nation
      tags:
      - Lists
      description: Lists all lists
      operationId: listLists
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/list_index_response"
  "/api/v2/lists/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/list_show_include"
    - "$ref": "#/components/parameters/list_sparse_fields"
    get:
      summary: Show list with provided ID
      tags:
      - Lists
      description: Show list with provided ID
      operationId: showList
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/list_show_response"
    patch:
      summary: Update an existing list
      tags:
      - Lists
      description: Updates an existing list
      operationId: updateList
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/list_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/list_update_request"
    delete:
      summary: Delete list with provided ID
      tags:
      - Lists
      description: Delete list with provided ID
      operationId: deleteList
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/lists/{id}/add_signups":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    patch:
      summary: Add signups
      tags:
      - Lists
      description: |
        Add Signup IDs to list via an asynchronous process.
        Returns the token of an asynchronous process that can be queried using another endpoint.
        Accepts up to 10,000 signup IDs in a single payload.
      operationId: addSignups
      parameters: []
      responses:
        '202':
          description: accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: '1234'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: bad_request
                  message:
                    type: string
                    example: A maximum of 10000 signup ids are allowed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The ID of the custom list.
                      example: '1'
                    type:
                      type: string
                      description: Resource type. Must always be lists.
                      example: lists
                    signup_ids:
                      type: array
                      description: IDs of the signups to add to custom list.
                      example:
                      - '1'
                      - '2'
                  required:
                  - id
                  - type
                  - signup_ids
        required: true
  "/api/v2/lists/{id}/remove_signups":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    patch:
      summary: Remove signups
      tags:
      - Lists
      description: |
        Remove Signup IDs from a list via an asynchronous process.
        Returns the token of an asynchronous process that can be queried using another endpoint.
        Accepts up to 10,000 signup IDs in a single payload.
      operationId: removeSignups
      parameters: []
      responses:
        '202':
          description: accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: '1234'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: bad_request
                  message:
                    type: string
                    example: A maximum of 10000 signup ids are allowed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The ID of the custom list.
                      example: '1'
                    type:
                      type: string
                      description: Resource type. Must always be lists.
                      example: lists
                    signup_ids:
                      type: array
                      description: IDs of the signups to remove from custom list
                      example:
                      - '1'
                      - '2'
                  required:
                  - id
                  - type
                  - signup_ids
        required: true
  "/api/v2/lists/{id}/signups":
    parameters:
    - name: id
      in: path
      description: List id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/signup_show_include"
    - "$ref": "#/components/parameters/signup_sparse_fields"
    get:
      summary: List all signups on the list for provided ID
      tags:
      - Lists
      description: Lists all signups for a given list
      operationId: listSignupListings
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_index_response"
  "/api/v2/lists/{id}/tag":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    patch:
      summary: Add a tag to signups
      tags:
      - Lists
      description: |
        Tag signups in list via an asynchronous process. If the tag does not exist it is created.
        Returns the token of an asyncrhronously process that can be queried using another endpoint.
      operationId: tagSignups
      parameters: []
      responses:
        '202':
          description: accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: '1234'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The ID of the custom list.
                      example: '1'
                    type:
                      type: string
                      description: Resource type. Must always be lists.
                      example: lists
                    tag:
                      type: string
                      description: Tag name used to tag signups
                      example: supporter
                  required:
                  - id
                  - type
                  - tag
        required: true
  "/api/v2/lists/{id}/untag":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    patch:
      summary: Remove a tag from signups
      tags:
      - Lists
      description: |
        Remove tag from signups in list via an asynchronous process.
        Returns the token of an asyncrhronously process that can be queried using another endpoint.
      operationId: untagSignups
      parameters: []
      responses:
        '202':
          description: accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: '1234'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The ID of the custom list.
                      example: '1'
                    type:
                      type: string
                      description: Resource type. Must always be lists.
                      example: lists
                    tag:
                      type: string
                      description: Tag to remove from signups
                      example: supporter
                  required:
                  - id
                  - type
                  - tag
        required: true
  "/api/v2/mailings":
    parameters:
    - "$ref": "#/components/parameters/mailing_index_include"
    - "$ref": "#/components/parameters/mailing_sparse_fields"
    get:
      summary: List all mailings in a nation
      tags:
      - Mailings
      description: Lists all mailings
      operationId: listMailings
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/mailing_index_response"
  "/api/v2/mailings/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/mailing_show_include"
    - "$ref": "#/components/parameters/mailing_sparse_fields"
    get:
      summary: Show mailing with provided ID
      tags:
      - Mailings
      description: Show mailing with provided ID
      operationId: showMailing
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/mailing_show_response"
  "/api/v2/membership_types":
    parameters:
    - "$ref": "#/components/parameters/membership_type_index_include"
    - "$ref": "#/components/parameters/membership_type_sparse_fields"
    post:
      summary: Create a membership type
      tags:
      - Membership Types
      description: Creates a membership type from given data
      operationId: createMembershipType
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/membership_type_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/membership_type_create_request"
    get:
      summary: List all membership types in a nation
      tags:
      - Membership Types
      description: Lists all membership types
      operationId: listMembershipTypes
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/membership_type_index_response"
  "/api/v2/membership_types/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/membership_type_show_include"
    - "$ref": "#/components/parameters/membership_type_sparse_fields"
    get:
      summary: Show membership type with provided ID
      tags:
      - Membership Types
      description: Show membership type with provided ID
      operationId: showMembershipType
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/membership_type_show_response"
    patch:
      summary: Update an existing membership type
      tags:
      - Membership Types
      description: Updates an existing membership type
      operationId: updateMembershipType
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/membership_type_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/membership_type_update_request"
    delete:
      summary: Delete membership type with provided ID
      tags:
      - Membership Types
      description: Delete membership type with provided ID
      operationId: deleteMembershipType
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/memberships":
    parameters:
    - "$ref": "#/components/parameters/membership_index_include"
    - "$ref": "#/components/parameters/membership_sparse_fields"
    post:
      summary: Create a membership
      tags:
      - Memberships
      description: Creates a membership from given data
      operationId: createMembership
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/membership_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/membership_create_request"
    get:
      summary: List all memberships in a nation
      tags:
      - Memberships
      description: Lists all memberships
      operationId: listMemberships
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/membership_index_response"
  "/api/v2/memberships/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/membership_show_include"
    - "$ref": "#/components/parameters/membership_sparse_fields"
    get:
      summary: Show membership with provided ID
      tags:
      - Memberships
      description: Show membership with provided ID
      operationId: showMembership
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/membership_show_response"
    patch:
      summary: Update an existing membership
      tags:
      - Memberships
      description: Updates an existing membership
      operationId: updateMembership
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/membership_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/membership_update_request"
    delete:
      summary: Delete membership with provided ID
      tags:
      - Memberships
      description: Delete membership with provided ID
      operationId: deleteMembership
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/pages":
    parameters:
    - "$ref": "#/components/parameters/page_index_include"
    - "$ref": "#/components/parameters/page_sparse_fields"
    post:
      summary: Create a page
      tags:
      - Pages
      description: Creates a page from given data
      operationId: createPage
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/page_create_request"
    get:
      summary: List all pages in a nation
      tags:
      - Pages
      description: Lists all pages
      operationId: listPages
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page_index_response"
  "/api/v2/pages/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/page_show_include"
    - "$ref": "#/components/parameters/page_sparse_fields"
    get:
      summary: Show page with provided ID
      tags:
      - Pages
      description: 'Show page with provided ID '
      operationId: showPage
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page_show_response"
    patch:
      summary: Update an existing page
      tags:
      - Pages
      description: Updates an existing page
      operationId: updatePage
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/page_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/page_update_request"
    delete:
      summary: Delete page with provided ID
      tags:
      - Pages
      description: Delete page with provided ID
      operationId: deletePage
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/path_histories":
    parameters:
    - "$ref": "#/components/parameters/path_history_index_include"
    - "$ref": "#/components/parameters/path_history_sparse_fields"
    get:
      summary: List all path histories in a nation
      tags:
      - Path Histories
      description: Lists all path histories
      operationId: listPathHistories
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_history_index_response"
  "/api/v2/path_histories/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/path_history_show_include"
    - "$ref": "#/components/parameters/path_history_sparse_fields"
    get:
      summary: Show path history with provided ID
      tags:
      - Path Histories
      description: 'Show path history with provided ID '
      operationId: showPathHistory
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_history_show_response"
  "/api/v2/path_journey_status_changes":
    parameters:
    - "$ref": "#/components/parameters/path_journey_status_change_index_include"
    - "$ref": "#/components/parameters/path_journey_status_change_sparse_fields"
    post:
      summary: Create a path journey status change
      tags:
      - Path Journey Status Changes
      description: Creates a path journey status change from given data
      operationId: createPathJourneyStatusChange
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_status_change_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/path_journey_status_change_create_request"
    get:
      summary: List all path journey status changes in a nation
      tags:
      - Path Journey Status Changes
      description: Lists all path journey status changes
      operationId: listPathJourneyStatusChanges
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_status_change_index_response"
  "/api/v2/path_journey_status_changes/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/path_journey_status_change_show_include"
    - "$ref": "#/components/parameters/path_journey_status_change_sparse_fields"
    get:
      summary: Show path journey status change with provided ID
      tags:
      - Path Journey Status Changes
      description: Show path journey status change with provided ID
      operationId: showPathJourneyStatusChange
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_status_change_show_response"
    patch:
      summary: Update an existing path journey status change
      tags:
      - Path Journey Status Changes
      description: Updates an existing path journey status change
      operationId: updatePathJourneyStatusChange
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_status_change_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/path_journey_status_change_update_request"
    delete:
      summary: Delete path journey status change with provided ID
      tags:
      - Path Journey Status Changes
      description: Delete path journey status change with provided ID
      operationId: deletePathJourneyStatusChange
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/path_journeys":
    parameters:
    - "$ref": "#/components/parameters/path_journey_index_include"
    - "$ref": "#/components/parameters/path_journey_sparse_fields"
    post:
      summary: Create a path journey
      tags:
      - Path Journeys
      description: Creates a path journey from given data
      operationId: createPathJourney
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/path_journey_create_request"
    get:
      summary: List all path journeys in a nation
      tags:
      - Path Journeys
      description: Lists all path journeys
      operationId: listPathJourneys
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_index_response"
  "/api/v2/path_journeys/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/path_journey_show_include"
    - "$ref": "#/components/parameters/path_journey_sparse_fields"
    get:
      summary: Show path journey with provided ID
      tags:
      - Path Journeys
      description: 'Show path journey with provided ID '
      operationId: showPathJourney
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_show_response"
    patch:
      summary: Update an existing path journey
      tags:
      - Path Journeys
      description: Updates an existing path journey
      operationId: updatePathJourney
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/path_journey_update_request"
  "/api/v2/path_journeys/{id}/abandon":
    patch:
      summary: Abandon path journey with provided ID
      tags:
      - Path Journeys
      description: 'Abandon path journey with provided ID '
      operationId: abandonPathJourney
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: path_journey_status_change_id
        in: query
        description: ID for abandonment reason
        example: '1'
        schema:
          type: string
      - "$ref": "#/components/parameters/path_journey_show_include"
      - "$ref": "#/components/parameters/path_journey_sparse_fields"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_show_response"
  "/api/v2/path_journeys/{id}/complete":
    patch:
      summary: Complete path journey with provided ID
      tags:
      - Path Journeys
      description: 'Complete path journey with provided ID '
      operationId: completePathJourney
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: path_journey_status_change_id
        in: query
        description: ID for completion reason
        example: '1'
        schema:
          type: string
      - "$ref": "#/components/parameters/path_journey_show_include"
      - "$ref": "#/components/parameters/path_journey_sparse_fields"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_show_response"
  "/api/v2/path_journeys/{id}/reactivate":
    patch:
      summary: Reactivate path journey with provided ID
      tags:
      - Path Journeys
      description: 'Reactivate path journey with provided ID '
      operationId: reactivatePathJourney
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/path_journey_show_include"
      - "$ref": "#/components/parameters/path_journey_sparse_fields"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_show_response"
  "/api/v2/path_journeys/{id}/void":
    patch:
      summary: Void path journey with provided ID
      tags:
      - Path Journeys
      description: 'Void path journey with provided ID '
      operationId: voidPathJourney
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/path_journey_show_include"
      - "$ref": "#/components/parameters/path_journey_sparse_fields"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_journey_show_response"
  "/api/v2/path_steps":
    parameters:
    - "$ref": "#/components/parameters/path_step_index_include"
    - "$ref": "#/components/parameters/path_step_sparse_fields"
    post:
      summary: Create a path step
      tags:
      - Path Steps
      description: |-
        Creates a path step from given data. If the position you specify is already taken by another step on
                          the path, your step will be placed at that position and that step and the steps following will be
                          re-ordered. If you do not specify a position, the step will be auto-assigned to the last position in
                          the list of path steps for the related path.
      operationId: createPathStep
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_step_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/path_step_create_request"
    get:
      summary: List all path steps in a nation
      tags:
      - Path Steps
      description: Lists all path steps
      operationId: listPathSteps
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_step_index_response"
  "/api/v2/path_steps/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/path_step_show_include"
    - "$ref": "#/components/parameters/path_step_sparse_fields"
    get:
      summary: Show path step with provided ID
      tags:
      - Path Steps
      description: 'Show path step with provided ID '
      operationId: showPathStep
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_step_show_response"
    patch:
      summary: Update an existing path step
      tags:
      - Path Steps
      description: |-
        Updates an existing path step. If the position you specify is already taken by another step on
                          the path, your step will be placed at that position and that step and the steps following will be
                          re-ordered.
      operationId: updatePathStep
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_step_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/path_step_update_request"
    delete:
      summary: Delete path step with provided ID
      tags:
      - Path Steps
      description: Delete path step with provided ID
      operationId: deletePathStep
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/paths":
    parameters:
    - "$ref": "#/components/parameters/path_index_include"
    - "$ref": "#/components/parameters/path_sparse_fields"
    post:
      summary: Create a path
      tags:
      - Paths
      description: Creates a path from given data
      operationId: createPath
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/path_create_request"
    get:
      summary: List all paths in a nation
      tags:
      - Paths
      description: Lists all paths
      operationId: listPaths
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_index_response"
  "/api/v2/paths/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/path_show_include"
    - "$ref": "#/components/parameters/path_sparse_fields"
    get:
      summary: Show path with provided ID
      tags:
      - Paths
      description: 'Show path with provided ID '
      operationId: showPath
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_show_response"
    patch:
      summary: Update an existing path
      tags:
      - Paths
      description: Updates an existing path
      operationId: updatePath
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/path_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/path_update_request"
    delete:
      summary: Delete path with provided ID
      tags:
      - Paths
      description: Delete path with provided ID
      operationId: deletePath
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/petition_signatures":
    parameters:
    - "$ref": "#/components/parameters/petition_signature_index_include"
    - "$ref": "#/components/parameters/petition_signature_sparse_fields"
    post:
      summary: Create a petition signature
      tags:
      - Petition Signatures
      description: Creates a petition signature from given data
      operationId: createPetitionSignature
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/petition_signature_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/petition_signature_create_request"
    get:
      summary: List all petition signatures in a nation
      tags:
      - Petition Signatures
      description: Lists all petition signatures
      operationId: listPetitionSignatures
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/petition_signature_index_response"
  "/api/v2/petition_signatures/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/petition_signature_show_include"
    - "$ref": "#/components/parameters/petition_signature_sparse_fields"
    get:
      summary: Show petition signature with provided ID
      tags:
      - Petition Signatures
      description: 'Show petition signature with provided ID '
      operationId: showPetitionSignature
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/petition_signature_show_response"
    patch:
      summary: Update an existing petition signature
      tags:
      - Petition Signatures
      description: Updates an existing petition signature
      operationId: updatePetitionSignature
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/petition_signature_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/petition_signature_update_request"
    delete:
      summary: Delete petition signature with provided ID
      tags:
      - Petition Signatures
      description: Delete petition signature with provided ID
      operationId: deletePetitionSignature
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/petitions":
    parameters:
    - "$ref": "#/components/parameters/petition_index_include"
    - "$ref": "#/components/parameters/petition_sparse_fields"
    post:
      summary: Create a petition
      tags:
      - Petitions
      description: Creates a petition from given data
      operationId: createPetition
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/petition_show_response_with_required_sidepost"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/petition_create_request"
    get:
      summary: List all petitions in a nation
      tags:
      - Petitions
      description: Lists all petitions
      operationId: listPetitions
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/petition_index_response"
  "/api/v2/petitions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/petition_show_include"
    - "$ref": "#/components/parameters/petition_sparse_fields"
    get:
      summary: Show petition with provided ID
      tags:
      - Petitions
      description: 'Show petition with provided ID '
      operationId: showPetition
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/petition_show_response"
    patch:
      summary: Update an existing petition
      tags:
      - Petitions
      description: Updates an existing petition
      operationId: updatePetition
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/petition_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/petition_update_request"
    delete:
      summary: Delete petition with provided ID
      tags:
      - Petitions
      description: Delete petition with provided ID
      operationId: deletePetition
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/pledges":
    parameters:
    - "$ref": "#/components/parameters/pledge_index_include"
    - "$ref": "#/components/parameters/pledge_sparse_fields"
    post:
      summary: Create a pledge
      tags:
      - Pledges
      description: Creates a pledge from given data
      operationId: createPledge
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pledge_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/pledge_create_request"
    get:
      summary: List all pledges in a nation
      tags:
      - Pledges
      description: Lists all pledges
      operationId: listPledges
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pledge_index_response"
  "/api/v2/pledges/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/pledge_show_include"
    - "$ref": "#/components/parameters/pledge_sparse_fields"
    get:
      summary: Show pledge with provided ID
      tags:
      - Pledges
      description: Show pledge with provided ID
      operationId: showPledge
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pledge_show_response"
    patch:
      summary: Update an existing pledge
      tags:
      - Pledges
      description: Updates an existing pledge
      operationId: updatePledge
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/pledge_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/pledge_update_request"
    delete:
      summary: Delete pledge with provided ID
      tags:
      - Pledges
      description: Delete pledge with provided ID
      operationId: deletePledge
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/precincts":
    parameters:
    - "$ref": "#/components/parameters/precinct_index_include"
    - "$ref": "#/components/parameters/precinct_sparse_fields"
    post:
      summary: Create a precinct
      tags:
      - Precincts
      description: Creates a precinct from given data.
      operationId: createPrecinct
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/precinct_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/precinct_create_request"
    get:
      summary: List all precincts in a nation
      tags:
      - Precincts
      description: Lists all precincts
      operationId: listPrecincts
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/precinct_index_response"
  "/api/v2/precincts/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/precinct_show_include"
    - "$ref": "#/components/parameters/precinct_sparse_fields"
    get:
      summary: Show precinct with provided ID
      tags:
      - Precincts
      description: Show precinct with provided ID
      operationId: showPrecinct
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/precinct_show_response"
    patch:
      summary: Update an existing precinct
      tags:
      - Precincts
      description: Updates an existing precinct.
      operationId: updatePrecinct
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/precinct_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/precinct_update_request"
    delete:
      summary: Delete precinct with provided ID
      tags:
      - Precincts
      description: Delete precinct with provided ID
      operationId: deletePrecinct
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/relationships":
    parameters:
    - "$ref": "#/components/parameters/relationship_index_include"
    - "$ref": "#/components/parameters/relationship_sparse_fields"
    post:
      summary: Create a relationship
      tags:
      - Relationships
      description: |-
        Creates a relationship from given data. Valid relationship types are affiliate-affiliate, alum-school, assistant-assisted, board_member-organization, candidate-committee, chapter-parent, child-parent, consultant-organization, employee-employer, family_partner-family_partner, friend-friend, member-organization, mentee-mentor, partner-partner, primary_contact-organization, relative-relative, representative-constituent, resident-organization, sibling-sibling, spouse-spouse, student-school, student-teacher, subordinate-manager, subsidiary-parent, treasurer-committee. first_signup_id
              corresponds with the ID of the signup on the first role listed, and second_signup_id corresponds
              with the ID of the signup on the second role listed in the relationship type.
      operationId: createRelationship
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/relationship_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/relationship_create_request"
    get:
      summary: List all relationships in a nation
      tags:
      - Relationships
      description: Lists all relationships
      operationId: listRelationships
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/relationship_index_response"
  "/api/v2/relationships/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/relationship_show_include"
    - "$ref": "#/components/parameters/relationship_sparse_fields"
    get:
      summary: Show relationship with provided ID
      tags:
      - Relationships
      description: Show relationship with provided ID
      operationId: showRelationship
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/relationship_show_response"
    patch:
      summary: Update an existing relationship
      tags:
      - Relationships
      description: |-
        Updates an existing relationship. Valid relationship types are affiliate-affiliate, alum-school, assistant-assisted, board_member-organization, candidate-committee, chapter-parent, child-parent, consultant-organization, employee-employer, family_partner-family_partner, friend-friend, member-organization, mentee-mentor, partner-partner, primary_contact-organization, relative-relative, representative-constituent, resident-organization, sibling-sibling, spouse-spouse, student-school, student-teacher, subordinate-manager, subsidiary-parent, treasurer-committee. first_signup_id
              corresponds with the ID of the signup on the first role listed, and second_signup_id corresponds
              with the ID of the signup on the second role listed in the relationship type.
      operationId: updateRelationship
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/relationship_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/relationship_update_request"
    delete:
      summary: Delete relationship with provided ID
      tags:
      - Relationships
      description: Delete relationship with provided ID
      operationId: deleteRelationship
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/signup_profiles":
    parameters:
    - "$ref": "#/components/parameters/signup_profile_index_include"
    - "$ref": "#/components/parameters/signup_profile_sparse_fields"
    post:
      summary: Create a signup profile
      tags:
      - Signup Profiles
      description: Creates a signup profile from given data
      operationId: createSignupProfile
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_profile_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/signup_profile_create_request"
    get:
      summary: List all signup profiles in a nation
      tags:
      - Signup Profiles
      description: Lists all signup profiles
      operationId: listSignupProfiles
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_profile_index_response"
  "/api/v2/signup_profiles/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/signup_profile_show_include"
    - "$ref": "#/components/parameters/signup_profile_sparse_fields"
    get:
      summary: Show signup profile with provided ID
      tags:
      - Signup Profiles
      description: 'Show signup profile with provided ID '
      operationId: showSignupProfile
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_profile_show_response"
    patch:
      summary: Update an existing signup profile
      tags:
      - Signup Profiles
      description: Updates an existing signup profile
      operationId: updateSignupProfile
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_profile_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/signup_profile_update_request"
    delete:
      summary: Delete signup profile with provided ID
      tags:
      - Signup Profiles
      description: Delete signup_profile with provided ID
      operationId: deleteSignupProfile
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/signup_taggings":
    parameters:
    - "$ref": "#/components/parameters/signup_tagging_index_include"
    - "$ref": "#/components/parameters/signup_tagging_sparse_fields"
    post:
      summary: Create a signup tagging
      tags:
      - Signup Taggings
      description: Creates a signup tagging from given data
      operationId: createSignupTagging
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_tagging_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/signup_tagging_create_request"
    get:
      summary: List all signup taggings in a nation
      tags:
      - Signup Taggings
      description: Lists all signup taggings
      operationId: listSignupTaggings
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_tagging_index_response"
  "/api/v2/signup_taggings/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/signup_tagging_show_include"
    - "$ref": "#/components/parameters/signup_tagging_sparse_fields"
    get:
      summary: Show signup tagging with provided ID
      tags:
      - Signup Taggings
      description: 'Show signup tagging with provided ID '
      operationId: showSignupTagging
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_tagging_show_response"
    delete:
      summary: Delete signup tag with provided ID
      tags:
      - Signup Taggings
      description: Delete Signup Tagging with provided ID
      operationId: deleteSignupTagging
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/signup_tags":
    parameters:
    - "$ref": "#/components/parameters/signup_tag_index_include"
    - "$ref": "#/components/parameters/signup_tag_sparse_fields"
    post:
      summary: Create a signup tag
      tags:
      - Signup Tags
      description: Creates a signup tag from given data
      operationId: createSignupTag
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_tag_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/signup_tag_create_request"
    get:
      summary: List all signup tags in a nation
      tags:
      - Signup Tags
      description: Lists all signup tags
      operationId: listSignupTags
      parameters:
      - "$ref": "#/components/parameters/signup_tag_signup_id_custom_filter"
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_tag_index_response"
  "/api/v2/signup_tags/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/signup_tag_show_include"
    - "$ref": "#/components/parameters/signup_tag_sparse_fields"
    get:
      summary: Show signup tag with provided ID
      tags:
      - Signup Tags
      description: 'Show signup tag with provided ID '
      operationId: showSignupTag
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_tag_show_response"
    patch:
      summary: Update an existing signup tag
      tags:
      - Signup Tags
      description: Updates an existing signup tag
      operationId: updateSignupTag
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_tag_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/signup_tag_update_request"
    delete:
      summary: Delete signup tag with provided ID
      tags:
      - Signup Tags
      description: Delete signup_tag with provided ID
      operationId: deleteSignupTag
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/signups":
    parameters:
    - "$ref": "#/components/parameters/signup_index_include"
    - "$ref": "#/components/parameters/signup_sparse_fields"
    - "$ref": "#/components/parameters/signup_extra_fields"
    post:
      summary: Create a signup
      tags:
      - Signups
      description: Creates a signup from given data
      operationId: createSignup
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_show_response"
        '422':
          description: errors are returned for an unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unprocessable_entity
                  message:
                    type: string
                    description: Error message explaining conflicts on the create
                      request
                    example: civicrm_id is already taken on signup 1
        '401':
          description: errors are returned for unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    description: Error message
                    example: |-
                      You are not authorized to access this content. Your access token may be missing.\
                                                   The resource owner also may not have a permission level sufficient to grant access.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/signup_create_request"
    get:
      summary: List all signups in a nation
      tags:
      - Signups
      description: Lists all signups
      operationId: listSignups
      parameters:
      - "$ref": "#/components/parameters/signup_nearby_custom_filter"
      - "$ref": "#/components/parameters/signup_page_id_custom_filter"
      - "$ref": "#/components/parameters/signup_with_email_address_custom_filter"
      - "$ref": "#/components/parameters/signup_with_bouncing_email_custom_filter"
      - "$ref": "#/components/parameters/signup_tag_id_custom_filter"
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_index_response"
  "/api/v2/signups/me":
    parameters:
    - "$ref": "#/components/parameters/signup_show_include"
    - "$ref": "#/components/parameters/signup_sparse_fields"
    - "$ref": "#/components/parameters/signup_extra_fields"
    get:
      summary: Show signup assigned to auth token
      tags:
      - Signups
      description: Show signup assigned to auth token
      operationId: meSignup
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_show_response"
  "/api/v2/signups/push":
    parameters:
    - "$ref": "#/components/parameters/signup_show_include"
    - "$ref": "#/components/parameters/signup_sparse_fields"
    - "$ref": "#/components/parameters/signup_extra_fields"
    patch:
      summary: Push signup data into nation
      tags:
      - Signups
      description: |
        This endpoint attempts to match the input person resource to a person already in the nation. If a match is found, the matched person is updated and a 200 status code is returned. If a match is not found, a new person is created and a 201 status code is returned. Matches are found by including one of the following IDs in the request:
          - civicrm_id
          - county_file_id
          - dw_id
          - external_id
          - email
          - facebook_username
          - ngp_id
          - salesforce_id
          - twitter_login
          - van_id

        The push endpoint also accepts all sideposted data that is allowed on the signup resource's create and update endpoints. Please see the top-level sideposting documentation for more information on sideposting signup relationships.
      operationId: pushSignup
      parameters: []
      responses:
        '200':
          description: successful update
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_show_response"
        '201':
          description: successful create
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_show_response"
        '401':
          description: unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    description: Error message
                    example: |-
                      You are not authorized to access this content. Your access token may be missing.\
                                                   The resource owner also may not have a permission level sufficient to grant access.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/signup_create_request"
  "/api/v2/signups/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/signup_show_include"
    - "$ref": "#/components/parameters/signup_sparse_fields"
    - "$ref": "#/components/parameters/signup_extra_fields"
    get:
      summary: Show signup with provided ID
      tags:
      - Signups
      description: 'Show signup with provided ID '
      operationId: showSignup
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_show_response"
    patch:
      summary: Update an existing signup
      tags:
      - Signups
      description: Updates an existing signup
      operationId: updateSignup
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/signup_show_response"
        '422':
          description: errors are returned for an unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unprocessable_entity
                  message:
                    type: string
                    description: Error message explaining conflicts on the create
                      request
                    example: civicrm_id is already taken on signup 1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/signup_update_request"
    delete:
      summary: Delete signup with provided ID
      tags:
      - Signups
      description: Delete signup with provided ID
      operationId: deleteSignup
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/sites":
    get:
      summary: List all sites in a nation
      tags:
      - Sites
      description: Lists all sites
      operationId: listSites
      parameters:
      - "$ref": "#/components/parameters/site_index_include"
      - "$ref": "#/components/parameters/site_sparse_fields"
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/site_index_response"
  "/api/v2/survey_question_possible_responses":
    parameters:
    - "$ref": "#/components/parameters/survey_question_possible_response_index_include"
    - "$ref": "#/components/parameters/survey_question_possible_response_sparse_fields"
    post:
      summary: Create a survey question possible response
      tags:
      - Survey Question Possible Responses
      description: Creates a survey question possible response from given data
      operationId: createSurveyQuestionPossibleResponse
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_possible_response_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/survey_question_possible_response_create_request"
    get:
      summary: List all survey question possible responses in a nation
      tags:
      - Survey Question Possible Responses
      description: Lists all survey question possible responses
      operationId: listSurveyQuestionPossibleResponses
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_possible_response_index_response"
  "/api/v2/survey_question_possible_responses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/survey_question_possible_response_show_include"
    - "$ref": "#/components/parameters/survey_question_possible_response_sparse_fields"
    get:
      summary: Show survey question possible response with provided ID
      tags:
      - Survey Question Possible Responses
      description: Show survey question possible response with provided ID
      operationId: showSurveyQuestionPossibleResponse
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_possible_response_show_response"
    patch:
      summary: Update an existing survey question possible response
      tags:
      - Survey Question Possible Responses
      description: Updates an existing survey question possible response
      operationId: updateSurveyQuestionPossibleResponse
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_possible_response_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/survey_question_possible_response_update_request"
    delete:
      summary: Delete survey question possible response with provided ID
      tags:
      - Survey Question Possible Responses
      description: Delete survey question possible response with provided ID
      operationId: deleteSurveyQuestionPossibleResponse
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/survey_question_responses":
    parameters:
    - "$ref": "#/components/parameters/survey_question_response_index_include"
    - "$ref": "#/components/parameters/survey_question_response_sparse_fields"
    post:
      summary: Create a survey question response
      tags:
      - Survey Question Responses
      description: Creates a survey question response from given data
      operationId: createSurveyQuestionResponse
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_response_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/survey_question_response_create_request"
    get:
      summary: List all survey question responses in a nation
      tags:
      - Survey Question Responses
      description: Lists all survey question responses
      operationId: listSurveyQuestionResponses
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_response_index_response"
  "/api/v2/survey_question_responses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/survey_question_response_show_include"
    - "$ref": "#/components/parameters/survey_question_response_sparse_fields"
    get:
      summary: Show survey question response with provided ID
      tags:
      - Survey Question Responses
      description: Show survey question response with provided ID
      operationId: showSurveyQuestionResponse
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_response_show_response"
    patch:
      summary: Update an existing survey question response
      tags:
      - Survey Question Responses
      description: Updates an existing survey question response
      operationId: updateSurveyQuestionResponse
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_response_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/survey_question_response_update_request"
    delete:
      summary: Delete survey question response with provided ID
      tags:
      - Survey Question Responses
      description: Delete survey question response with provided ID
      operationId: deleteSurveyQuestionResponse
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/survey_questions":
    parameters:
    - "$ref": "#/components/parameters/survey_question_index_include"
    - "$ref": "#/components/parameters/survey_question_sparse_fields"
    post:
      summary: Create a survey question
      tags:
      - Survey Questions
      description: Creates a survey question from given data
      operationId: createSurveyQuestion
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/survey_question_create_request"
    get:
      summary: List all survey questions in a nation
      tags:
      - Survey Questions
      description: Lists all survey questions
      operationId: listSurveyQuestions
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_index_response"
  "/api/v2/survey_questions/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/survey_question_show_include"
    - "$ref": "#/components/parameters/survey_question_sparse_fields"
    get:
      summary: Show survey question with provided ID
      tags:
      - Survey Questions
      description: Show survey question with provided ID
      operationId: showSurveyQuestion
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_show_response"
    patch:
      summary: Update an existing survey question
      tags:
      - Survey Questions
      description: Updates an existing survey question
      operationId: updateSurveyQuestion
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_question_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/survey_question_update_request"
    delete:
      summary: Delete survey question with provided ID
      tags:
      - Survey Questions
      description: Delete survey question with provided ID
      operationId: deleteSurveyQuestion
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/surveys":
    parameters:
    - "$ref": "#/components/parameters/survey_index_include"
    - "$ref": "#/components/parameters/survey_sparse_fields"
    post:
      summary: Create a survey
      tags:
      - Surveys
      description: Creates a survey from given data
      operationId: createSurvey
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/survey_create_request"
    get:
      summary: List all surveys in a nation
      tags:
      - Surveys
      description: Lists all surveys
      operationId: listSurveys
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_index_response"
  "/api/v2/surveys/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/survey_show_include"
    - "$ref": "#/components/parameters/survey_sparse_fields"
    get:
      summary: Show survey with provided ID
      tags:
      - Surveys
      description: Show survey with provided ID
      operationId: showSurvey
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_show_response"
    patch:
      summary: Update an existing survey
      tags:
      - Surveys
      description: Updates an existing survey
      operationId: updateSurvey
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/survey_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/survey_update_request"
    delete:
      summary: Delete survey with provided ID
      tags:
      - Surveys
      description: Delete survey with provided ID
      operationId: deleteSurvey
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
  "/api/v2/voters":
    parameters:
    - "$ref": "#/components/parameters/voter_index_include"
    - "$ref": "#/components/parameters/voter_sparse_fields"
    post:
      summary: Create a voter
      tags:
      - Voters
      description: Creates a voter from given data
      operationId: createVoter
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/voter_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/voter_create_request"
    get:
      summary: List all voters in a nation
      tags:
      - Voters
      description: Lists all voters
      operationId: listVoters
      parameters:
      - "$ref": "#/components/parameters/pagination_number"
      - "$ref": "#/components/parameters/pagination_size"
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/voter_index_response"
  "/api/v2/voters/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    - "$ref": "#/components/parameters/voter_show_include"
    - "$ref": "#/components/parameters/voter_sparse_fields"
    get:
      summary: Show voter with provided ID
      tags:
      - Voters
      description: 'Show voter with provided ID '
      operationId: showVoter
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/voter_show_response"
    patch:
      summary: Update an existing voter
      tags:
      - Voters
      description: Updates an existing voter
      operationId: updateVoter
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/voter_show_response"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/voter_update_request"
    delete:
      summary: Delete voter with provided ID
      tags:
      - Voters
      description: Delete voter with provided ID
      operationId: deleteVoter
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/empty_meta_response"
security:
- BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    empty_meta_response:
      type: object
      required:
      - meta
      additionalProperties: false
      properties:
        meta:
          type: object
          properties: {}
    automation_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: automations
            attributes:
              "$ref": "#/components/schemas/automation_read_write_attributes"
    automation_enrollment_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: automation_enrollments
            attributes:
              "$ref": "#/components/schemas/automation_enrollment_read_write_attributes"
    automation_enrollment_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/automation_enrollment_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/automation_enrollments?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/automation_enrollments?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/automation_enrollments?page[number]=3
    automation_enrollment_read_only_attributes:
      type: object
      properties:
        automation_step_number:
          type: integer
          example: 1
          description: The step in the automation.
          default: 0
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        excluded_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the enrollment was excluded.
          format: datetime
          nullable: true
        next_execution:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The next time the automation will be executed for this enrollment.
          format: datetime
          nullable: true
    automation_enrollment_read_write_attributes:
      type: object
      properties:
        signup_id:
          type: string
          example: '1'
          description: The signup in this enrollment.
          nullable: false
        automation_id:
          type: string
          example: '1'
          description: The automation in this enrollment
          nullable: false
        campaign_source:
          type: string
          example: Campaign Source
          description: The campaign source.
          nullable: true
        campaign_url:
          type: string
          example: https://www.example.com
          description: The campaign url
          nullable: true
    automation_enrollment_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: automation_enrollments
        attributes:
          allOf:
          - "$ref": "#/components/schemas/automation_enrollment_read_write_attributes"
          - "$ref": "#/components/schemas/automation_enrollment_read_only_attributes"
    automation_enrollment_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/automation_enrollment_response_data"
    automation_enrollment_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: automation_enrollments
            attributes:
              "$ref": "#/components/schemas/automation_enrollment_read_write_attributes"
    automation_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/automation_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/automations?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/automations?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/automations?page[number]=3
    automation_read_only_attributes:
      type: object
      properties:
        status:
          type: string
          example: drafted
          description: The automation's status
          enum:
          - drafted
          - running
          - on_hold
          - archived
          - ended
          default: drafted
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        paused_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the automation was paused.
          format: datetime
          nullable: true
    automation_read_write_attributes:
      type: object
      properties:
        name:
          type: string
          example: Auto-Email Automation
          description: The name of the automation.
          nullable: true
        description:
          type: string
          example: Send automated emails during workflow process
          description: A description for the automation.
          nullable: true
    automation_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: automations
        attributes:
          allOf:
          - "$ref": "#/components/schemas/automation_read_write_attributes"
          - "$ref": "#/components/schemas/automation_read_only_attributes"
    automation_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/automation_response_data"
    automation_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: automations
            attributes:
              "$ref": "#/components/schemas/automation_read_write_attributes"
    ballot_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: ballots
            attributes:
              "$ref": "#/components/schemas/ballot_read_write_attributes"
    ballot_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/ballot_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/ballots?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/ballots?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/ballots?page[number]=3
    ballot_read_write_attributes:
      type: object
      properties:
        cast_at:
          type: string
          example: '2022-03-25'
          description: When the ballot was cast.
          nullable: true
        election_id:
          type: string
          example: '1'
          description: The election associated with this ballot.
          nullable: false
        party:
          type: string
          example: green
          description: Political party.
          nullable: true
        vote_method:
          type: string
          example: absentee
          description: One word description of the vote method.
          enum:
          - voted
          - absentee
          - early
          nullable: true
        voter_id:
          type: string
          example: '1'
          description: The voter belonging to the ballot.
          nullable: false
    ballot_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: ballots
        attributes:
          "$ref": "#/components/schemas/ballot_read_write_attributes"
    ballot_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/ballot_response_data"
    ballot_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: ballots
            attributes:
              "$ref": "#/components/schemas/ballot_read_write_attributes"
    broadcaster_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/broadcaster_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/broadcasters?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/broadcasters?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/broadcasters?page[number]=3
    broadcaster_read_only_attributes:
      type: object
      properties:
        name:
          type: string
          example: Lucy Butler
          description: The name of the broadcaster.
          nullable: true
        email:
          type: string
          example: test@example.com
          description: The broadcaster's email address.
          nullable: true
        mailings_count:
          type: integer
          example: 0
          description: The number of email blasts created by the broadcaster.
          default: 0
          nullable: true
        text_blasts_count:
          type: integer
          example: 0
          description: The number of text blasts created by the broadcaster.
          default: 0
          nullable: true
        received_calls_count:
          type: integer
          example: 0
          description: The number of calls received.
          default: 0
          nullable: true
        is_bcc:
          type: boolean
          example: false
          description: Enable BCC for this broadcaster.
          default: false
          nullable: true
        receive_email:
          type: boolean
          example: true
          description: Allow the broadcaster to receive emails.
          default: false
          nullable: false
        point_person_id:
          type: string
          example: '1'
          description: The point person for the broadcaster.
          nullable: true
        emailers_need_followup:
          type: boolean
          example: true
          description: Mark interactions with the broadcaster as needing followup.
          default: false
          nullable: false
        emailer_tags:
          type: string
          example: interested
          description: Add these tags to signups that interact with this broadcaster.
            (comma separated list)
          nullable: true
        signup_id:
          type: string
          example: '1'
          description: Signup that belongs to the broadcaster.
          nullable: true
        call_type_id:
          type: string
          example: '1'
          description: The call type that belongs to the broadcaster.
          nullable: true
        voicemail_needs_followup:
          type: boolean
          example: true
          description: Mark voicemails received by the broadcaster as needing followup.
          nullable: true
        voicemail_point_person_id:
          type: string
          example: '1'
          description: The point person responsible for voicemails.
          nullable: true
        voicemail_tags:
          type: string
          example: voicemail-tagged
          description: Tag signups that leave voicemails with these tags. (comma separated
            list)
          nullable: true
        text_needs_followup:
          type: boolean
          example: true
          description: Mark text received by the broadcaster as needing followup.
          nullable: true
        text_point_person_id:
          type: string
          example: '1'
          description: The point person responsible for texts.
          nullable: true
        text_tags:
          type: string
          example: text-tagged
          description: Tag signups that interact with the broadcaster via text with
            these tags. (comma separated list)
          nullable: true
        new_email_sender_marked_as_prospect:
          type: boolean
          example: true
          description: Signups that email this broadcaster for the first time are
            marked as a prospect.
          default: false
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    broadcaster_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: broadcasters
        attributes:
          "$ref": "#/components/schemas/broadcaster_read_only_attributes"
    broadcaster_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/broadcaster_response_data"
    contact_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: contacts
            attributes:
              "$ref": "#/components/schemas/contact_read_write_attributes"
    contact_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/contact_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/contacts?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/contacts?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/contacts?page[number]=3
    contact_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    contact_read_write_attributes:
      type: object
      properties:
        author_id:
          type: string
          example: '1'
          description: The contact's author.
          nullable: true
        signup_id:
          type: string
          example: '1'
          description: The contact's signup.
          nullable: true
        contact_status:
          type: string
          example: answered
          description: The status.
          enum:
          - other
          - answered
          - bad_info
          - left_message
          - meaningful_interaction
          - send_information
          - not_interested
          - no_answer
          - refused
          - inaccessible
          -
          nullable: true
        contact_method:
          type: string
          example: email
          description: The contact method.
          enum:
          - delivery
          - door_knock
          - email
          - email_blast
          - face_to_face
          - facebook
          - meeting
          - phone_call
          - robocall
          - snail_mail
          - text
          - text_1to1
          - text_blast
          - tweet
          - video_call
          - webinar
          - linkedin
          - other
          -
          nullable: true
        broadcaster_id:
          type: string
          example: '1'
          description: The broadcaster of the contact.
          nullable: true
        content:
          type: string
          example: They do not support the cause
          description: The content of the contact.
          nullable: true
        pc_in_cents:
          type: integer
          example: 1
          description: Political capital awarded in this contact.
          default: 0
          nullable: false
        path_id:
          type: string
          example: '1'
          description: The path belonging to this contact.
          nullable: true
        path_step_id:
          type: string
          example: '1'
          description: The path step belonging to this contact.
          nullable: true
    contact_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: contacts
        attributes:
          allOf:
          - "$ref": "#/components/schemas/contact_read_write_attributes"
          - "$ref": "#/components/schemas/contact_read_only_attributes"
    contact_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/contact_response_data"
    contact_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: contacts
            attributes:
              "$ref": "#/components/schemas/contact_read_write_attributes"
    custom_field_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/custom_field_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/custom_fields?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/custom_fields?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/custom_fields?page[number]=3
    custom_field_read_only_attributes:
      type: object
      properties:
        field_type:
          type: string
          example: multiple_choice
          description: The field type.
          nullable: true
        name:
          type: string
          example: My Custom Field
          description: The name of the field.
          nullable: true
        resource_type:
          type: string
          example: Signup
          description: The resource the field belongs to. Can be 'Signup' or 'Donation'
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        slug:
          type: string
          example: my_custom_field
          description: A unique identifier for the field.
          nullable: true
        options:
          type: object
          example:
            '1': option1
            '2': option2
            '3': option3
          description: Multiple choice options.
          nullable: true
        position:
          type: integer
          example: 2
          description: The position in order of custom fields on the assigned model.
          nullable: true
    custom_field_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: custom_fields
        attributes:
          "$ref": "#/components/schemas/custom_field_read_only_attributes"
    custom_field_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/custom_field_response_data"
    donation_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: donations
            attributes:
              allOf:
              - "$ref": "#/components/schemas/donation_read_write_attributes"
              - "$ref": "#/components/schemas/donation_write_only_attributes"
    donation_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/donation_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/donations?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/donations?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/donations?page[number]=3
    donation_read_only_attributes:
      type: object
      properties:
        amount:
          type: string
          example: '5.00'
          description: The order amount.
          nullable: true
        import_id:
          type: string
          example: '1'
          description: The import that created this donation.
          nullable: true
        succeeded_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the donation succeeded.
          format: datetime
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    donation_read_write_attributes:
      type: object
      properties:
        actblue_order_number:
          type: string
          example: 123abc
          description: The ActBlue order.
          nullable: true
        amount_in_cents:
          type: integer
          example: 500
          description: The order amount in cents.
          default: 0
          nullable: true
        canceled_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the order was canceled.
          format: datetime
          nullable: true
        check_number:
          type: string
          example: '1001'
          description: Check number.
          nullable: true
        donation_tracking_code_id:
          type: string
          example: '1'
          description: The associated donation tracking code.
          nullable: true
        first_name:
          type: string
          example: Lucy
          description: Donor's first name.
          nullable: true
        middle_name:
          type: string
          example: Octavia
          description: Donor's middle name.
          nullable: true
        last_name:
          type: string
          example: Butler
          description: Donor's last name.
          nullable: true
        is_private:
          type: boolean
          example: false
          description: Marks the donation as private.
          default: false
          nullable: true
        is_corporate_contribution:
          type: boolean
          example: false
          description: Marks the donation as a corporate donation.
          default: false
          nullable: true
        custom_values:
          type: object
          example:
            custom_text: Text Value
            custom_number: '22'
            custom_checkbox: true
            custom_multi: Some multiple choice option
          description: Values for nation-defined fields on donation
          nullable: true
        email:
          type: string
          example: donor@gmail.com
          description: Donor's email.
          nullable: true
        employer:
          type: string
          example: Wild Horse Co.
          description: Donor's employer.
          nullable: true
        failed_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the donation failed.
          format: datetime
          nullable: true
        mailing_id:
          type: string
          example: '1'
          description: The mailing associated with this donation.
          nullable: true
        membership_id:
          type: string
          example: '1'
          description: The membership given from this donation.
          nullable: true
        note:
          type: string
          example: Dedicated to Lucy
          description: Short description.
          nullable: true
        occupation:
          type: string
          example: Postal Carrier
          description: Donor's occupation.
          nullable: true
        page_id:
          type: string
          example: '1'
          description: The page associated with this donation.
          nullable: true
        payment_type_id:
          type: string
          example: '1'
          description: The payment type used.
          nullable: true
        payment_type_name:
          type: string
          example: Cash
          description: The name of the payment type
          nullable: true
        pledge_id:
          type: string
          example: '1'
          description: The associated pledge.
          nullable: true
        signup_id:
          type: string
          example: '1'
          description: The signup that donated.
          nullable: true
    donation_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: donations
        attributes:
          allOf:
          - "$ref": "#/components/schemas/donation_read_write_attributes"
          - "$ref": "#/components/schemas/donation_read_only_attributes"
    donation_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/donation_response_data"
    donation_tracking_code_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: donation_tracking_codes
            attributes:
              "$ref": "#/components/schemas/donation_tracking_code_read_write_attributes"
    donation_tracking_code_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/donation_tracking_code_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/donation_tracking_codes?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/donation_tracking_codes?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/donation_tracking_codes?page[number]=3
    donation_tracking_code_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    donation_tracking_code_read_write_attributes:
      type: object
      properties:
        name:
          type: string
          example: Summer Banquet 2022
          description: The name of the tracking code.
          nullable: true
        slug:
          type: string
          example: summer_banquet_2022
          description: A unique identifier for the tracking code.
          nullable: true
    donation_tracking_code_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: donation_tracking_codes
        attributes:
          allOf:
          - "$ref": "#/components/schemas/donation_tracking_code_read_write_attributes"
          - "$ref": "#/components/schemas/donation_tracking_code_read_only_attributes"
    donation_tracking_code_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/donation_tracking_code_response_data"
    donation_tracking_code_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: donation_tracking_codes
            attributes:
              "$ref": "#/components/schemas/donation_tracking_code_read_write_attributes"
    donation_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: donations
            attributes:
              type: object
              properties:
                amount_in_cents:
                  type: integer
                  example: 500
                  description: The order amount in cents.
                  default: 0
                  nullable: true
                canceled_at:
                  type: string
                  example: '2019-10-26T10:00:00-04:00'
                  description: When the order was canceled.
                  format: datetime
                  nullable: true
                check_number:
                  type: string
                  example: '1001'
                  description: Check number.
                  nullable: true
                donation_tracking_code_id:
                  type: string
                  example: '1'
                  description: The associated donation tracking code.
                  nullable: true
                first_name:
                  type: string
                  example: Lucy
                  description: Donor's first name.
                  nullable: true
                middle_name:
                  type: string
                  example: Octavia
                  description: Donor's middle name.
                  nullable: true
                last_name:
                  type: string
                  example: Butler
                  description: Donor's last name.
                  nullable: true
                is_private:
                  type: boolean
                  example: false
                  description: Marks the donation as private.
                  default: false
                  nullable: true
                is_corporate_contribution:
                  type: boolean
                  example: false
                  description: Marks the donation as a corporate donation.
                  default: false
                  nullable: true
                custom_values:
                  type: object
                  example:
                    custom_text: Text Value
                    custom_number: '22'
                    custom_checkbox: true
                    custom_multi: Some multiple choice option
                  description: Values for nation-defined fields on donation
                  nullable: true
                email:
                  type: string
                  example: donor@gmail.com
                  description: Donor's email.
                  nullable: true
                employer:
                  type: string
                  example: Wild Horse Co.
                  description: Donor's employer.
                  nullable: true
                failed_at:
                  type: string
                  example: '2019-10-26T10:00:00-04:00'
                  description: When the donation failed.
                  format: datetime
                  nullable: true
                mailing_id:
                  type: string
                  example: '1'
                  description: The mailing associated with this donation.
                  nullable: true
                membership_id:
                  type: string
                  example: '1'
                  description: The membership given from this donation.
                  nullable: true
                note:
                  type: string
                  example: Dedicated to Lucy
                  description: Short description.
                  nullable: true
                occupation:
                  type: string
                  example: Postal Carrier
                  description: Donor's occupation.
                  nullable: true
                page_id:
                  type: string
                  example: '1'
                  description: The page associated with this donation.
                  nullable: true
                payment_type_id:
                  type: string
                  example: '1'
                  description: The payment type used.
                  nullable: true
                payment_type_name:
                  type: string
                  example: Cash
                  description: The name of the payment type
                  nullable: true
                pledge_id:
                  type: string
                  example: '1'
                  description: The associated pledge.
                  nullable: true
                signup_id:
                  type: string
                  example: '1'
                  description: The signup that donated.
                  nullable: true
                billing_address_attributes:
                  type: object
                  example:
                    address1: 20 W 34th St.
                    address2: Suite 100
                    address3:
                    city: New York
                    state: NY
                    zip: '10001'
                    county: New York County
                    country_code: US
                    lat: '40.7484'
                    lng: '73.9857'
                    fips: '04'
                    submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
                    distance: 0
                    import_id: '2'
                    work_phone: '5555555555'
                    phone_number: '5555555555'
                    phone_country_code: '1'
                    work_phone_number: '5555555555'
                    delete: true
                  description: |2
                            Attribute used to write data to the given donation's Billing address.
                            When an address already exists, provided values will be used to patch the existing address data,
                            only overwriting values provided in the payload.
                            When no address exists, the existing data will be used to persist a new address.
                  nullable: true
                work_address_attributes:
                  type: object
                  example:
                    address1: 20 W 34th St.
                    address2: Suite 100
                    address3:
                    city: New York
                    state: NY
                    zip: '10001'
                    county: New York County
                    country_code: US
                    lat: '40.7484'
                    lng: '73.9857'
                    fips: '04'
                    submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
                    distance: 0
                    import_id: '2'
                    work_phone: '5555555555'
                    phone_number: '5555555555'
                    phone_country_code: '1'
                    work_phone_number: '5555555555'
                    delete: true
                  description: |2
                            Attribute used to write data to the given donation's Work address.
                            When an address already exists, provided values will be used to patch the existing address data,
                            only overwriting values provided in the payload.
                            When no address exists, the existing data will be used to persist a new address.
                  nullable: true
    donation_write_only_attributes:
      type: object
      properties:
        send_donor_receipt:
          type: boolean
          example: false
          default: false
          nullable: true
        billing_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given donation's Billing address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        work_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given donation's Work address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
    election_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: elections
            attributes:
              "$ref": "#/components/schemas/election_read_write_attributes"
    election_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/election_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/elections?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/elections?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/elections?page[number]=3
    election_read_only_attributes:
      type: object
      properties:
        donation_maximum:
          type: string
          example: '5.00'
          description: Maximum donation amount.
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    election_read_write_attributes:
      type: object
      properties:
        country_code:
          type: string
          example: US
          description: Two letter country code.
          nullable: true
        donation_maximum_in_cents:
          type: integer
          example: 500
          description: Maximum donation amount in cents.
          default: 0
          nullable: true
        election_at:
          type: string
          example: '2022-11-08'
          description: The date the election is held.
          nullable: true
        election_cycle:
          type: string
          example: '2022'
          description: The election cycle.
          nullable: true
        election_period:
          type: string
          example: primary
          description: The election period.
          enum:
          - primary
          - general
          - special
          - recount
          - runoff
          - convention
          - other
          - unknown
          - presidential_primary
          - previous_campaign
          default: unknown
          nullable: true
        registration_ends_at:
          type: string
          example: '2022-10-15'
          description: The date the registration ends.
          nullable: true
        state:
          type: string
          example: NY
          description: Two letter abbreviation of the state.
          nullable: true
    election_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: elections
        attributes:
          allOf:
          - "$ref": "#/components/schemas/election_read_write_attributes"
          - "$ref": "#/components/schemas/election_read_only_attributes"
    election_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/election_response_data"
    election_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: elections
            attributes:
              "$ref": "#/components/schemas/election_read_write_attributes"
    event_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: events
            attributes:
              allOf:
              - "$ref": "#/components/schemas/event_read_write_attributes"
              - "$ref": "#/components/schemas/event_write_only_attributes"
            relationships:
              type: object
              properties:
                page:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        type:
                          type: string
                          example: pages
                        temp-id:
                          type: string
                          example: new-id
                        method:
                          type: string
                          example: create
        included:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: pages
              temp-id:
                type: string
                example: new-id
              attributes:
                "$ref": "#/components/schemas/page_read_write_attributes"
    event_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/event_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/events?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/events?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/events?page[number]=3
    event_read_only_attributes:
      type: object
      properties:
        page_id:
          type: string
          example: '1'
          description: ID of the page associated with the event
          nullable: true
    event_read_write_attributes:
      type: object
      properties:
        accept_rsvps:
          type: boolean
          example: false
          description: Allows people to RSVP for the event. If set to false, the event
            will display, but people will not be able to submit an RSVP to it.
          nullable: false
        additional_rsvps_count:
          type: integer
          example: 20
          description: Number of offline RSVPs to add to event's total capacity
          nullable: true
        allow_guests:
          type: boolean
          example: false
          description: Allows RSVP to enter the number of guests they will bring to
            the event.
          nullable: true
        attending_count:
          type: integer
          example: 100
          description: The number of attendees for the current event.
          nullable: true
        auto_response_broadcaster_id:
          type: string
          example: '1'
          description: ID of the broadcaster that the event's auto response will be
            sent by
          nullable: true
        auto_response_content:
          type: string
          example: Content of autoresponse
          description: Email content of the auto response sent people RSVP-ing to
            the event.
          nullable: true
        auto_response_subject:
          type: string
          example: Subject of autoresponse
          description: Email subject of the auto response sent people RSVP-ing to
            the event.
          nullable: true
        capacity_count:
          type: integer
          example: 200
          description: The number of RSVPs allowed. If set to 0, there is no limit
            to number of RSVPs.
          nullable: true
        contact_email:
          type: string
          example: jdoe@work.com
          description: The email address of the contact person.
          nullable: true
        contact_email_private:
          type: boolean
          example: false
          description: Flag used to hide the contact person's email address on public
            event pages.
          nullable: true
        contact_name:
          type: string
          example: John Doe
          description: The name of the contact person for the event.
          nullable: true
        contact_phone_number:
          type: string
          example: '5555555555'
          description: The phone number of the contact person.
          nullable: true
        contact_phone_private:
          type: boolean
          example: false
          description: Flag used to hide the contact person's phone number on public
            event pages.
          nullable: true
        content:
          type: string
          example: Event description
          description: Content displayed on the public event page
          nullable: true
        donation_tracking_code_id:
          type: string
          example: '1'
          description: ID of the donation tracking code to be associated with ticket
            purchases for the event
          nullable: true
        duration:
          type: integer
          example: 3600
          description: Duration of the event in seconds. Updates the end_at time of
            the event.
          nullable: true
        event_form_address:
          type: string
          example: required
          description: Attribute used to set address input requirements for RSVPs
          enum:
          - required
          - optional
          - hidden
          nullable: true
        event_form_phone:
          type: string
          example: required
          description: Attribute used to set phone number input requirements for RSVPs
          enum:
          - required
          - optional
          - hidden
          nullable: true
        gather_volunteers:
          type: boolean
          example: false
          description: Attribute used to ask RSVPs if they want to volunteer in the
            public event form.
          nullable: true
        point_person_id:
          type: string
          example: '1'
          description: ID of the point person assigned to RSVPs
          nullable: true
        private:
          type: boolean
          example: false
          description: When true, the event is hidden in the website
          nullable: true
        sends_auto_response:
          type: boolean
          example: false
          description: Automatically send person RSVPing an email
          default: true
          nullable: true
        show_guests:
          type: boolean
          example: false
          description: Controls where RSVPs are shown on the event page
          nullable: true
        start_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: Start time of the event
          format: datetime
          nullable: true
        time_zone:
          type: string
          example: Eastern Time (US & Canada)
          description: Time zone the event takes place in
          enum:
          - International Date Line West
          - American Samoa
          - Midway Island
          - Hawaii
          - Alaska
          - Pacific Time (US & Canada)
          - Tijuana
          - Arizona
          - Mazatlan
          - Mountain Time (US & Canada)
          - Central America
          - Central Time (US & Canada)
          - Chihuahua
          - Guadalajara
          - Mexico City
          - Monterrey
          - Saskatchewan
          - Bogota
          - Eastern Time (US & Canada)
          - Indiana (East)
          - Lima
          - Quito
          - Atlantic Time (Canada)
          - Caracas
          - Georgetown
          - La Paz
          - Puerto Rico
          - Santiago
          - Newfoundland
          - Brasilia
          - Buenos Aires
          - Montevideo
          - Greenland
          - Mid-Atlantic
          - Azores
          - Cape Verde Is.
          - Edinburgh
          - Lisbon
          - London
          - Monrovia
          - UTC
          - Amsterdam
          - Belgrade
          - Berlin
          - Bern
          - Bratislava
          - Brussels
          - Budapest
          - Casablanca
          - Copenhagen
          - Dublin
          - Ljubljana
          - Madrid
          - Paris
          - Prague
          - Rome
          - Sarajevo
          - Skopje
          - Stockholm
          - Vienna
          - Warsaw
          - West Central Africa
          - Zagreb
          - Zurich
          - Athens
          - Bucharest
          - Cairo
          - Harare
          - Helsinki
          - Jerusalem
          - Kaliningrad
          - Kyiv
          - Pretoria
          - Riga
          - Sofia
          - Tallinn
          - Vilnius
          - Baghdad
          - Istanbul
          - Kuwait
          - Minsk
          - Moscow
          - Nairobi
          - Riyadh
          - St. Petersburg
          - Volgograd
          - Tehran
          - Abu Dhabi
          - Baku
          - Muscat
          - Samara
          - Tbilisi
          - Yerevan
          - Kabul
          - Almaty
          - Ekaterinburg
          - Islamabad
          - Karachi
          - Tashkent
          - Chennai
          - Kolkata
          - Mumbai
          - New Delhi
          - Sri Jayawardenepura
          - Kathmandu
          - Astana
          - Dhaka
          - Urumqi
          - Rangoon
          - Bangkok
          - Hanoi
          - Jakarta
          - Krasnoyarsk
          - Novosibirsk
          - Beijing
          - Chongqing
          - Hong Kong
          - Irkutsk
          - Kuala Lumpur
          - Perth
          - Singapore
          - Taipei
          - Ulaanbaatar
          - Osaka
          - Sapporo
          - Seoul
          - Tokyo
          - Yakutsk
          - Adelaide
          - Darwin
          - Brisbane
          - Canberra
          - Guam
          - Hobart
          - Melbourne
          - Port Moresby
          - Sydney
          - Vladivostok
          - Magadan
          - New Caledonia
          - Solomon Is.
          - Srednekolymsk
          - Auckland
          - Fiji
          - Kamchatka
          - Marshall Is.
          - Wellington
          - Chatham Is.
          - Nuku'alofa
          - Samoa
          - Tokelau Is.
          nullable: true
        user_ticket_currency:
          type: string
          example: USD
          description: Currency tickets are purchased in. Used only when selling tickets
            outside of NationBuilder
          nullable: true
        user_ticket_price_in_cents:
          type: integer
          example: 400
          description: Price in cents of the ticket level. Used only when selling
            tickets outside of NationBuilder
          nullable: true
        user_ticket_purchase_url:
          type: string
          example: https://www.example.com
          description: URL to third-party seller where tickets are being sold. Used
            only when selling tickets outside of NationBuilder
          nullable: true
        uses_shifts:
          type: boolean
          example: false
          description: Flag controlling whether RSVPs will be asked to sign up for
            shifts during the event.
          nullable: true
        uses_tickets:
          type: boolean
          example: false
          description: Flag controller whether tickets will be sold to people RSVPing
            to the event
          nullable: true
        venue_name:
          type: string
          example: Event Center
          description: Name of the venue
          nullable: true
    event_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: events
        attributes:
          allOf:
          - "$ref": "#/components/schemas/event_read_write_attributes"
          - "$ref": "#/components/schemas/event_read_only_attributes"
    event_rsvp_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: event_rsvps
            attributes:
              allOf:
              - "$ref": "#/components/schemas/event_rsvp_read_write_attributes"
              - "$ref": "#/components/schemas/event_rsvp_write_only_attributes"
    event_rsvp_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/event_rsvp_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/event_rsvps?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/event_rsvps?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/event_rsvps?page[number]=3
    event_rsvp_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    event_rsvp_read_write_attributes:
      type: object
      properties:
        amount_in_cents:
          type: integer
          example: 350
          description: The cost of the RSVP in cents.
          nullable: true
        attendee:
          type: boolean
          example: false
          description: The signup is attending the event.
          nullable: true
        canceled:
          type: boolean
          example: false
          description: The RSVP was canceled.
          nullable: true
        email:
          type: string
          example: lucille.ball@example.com
          description: The email address of the attendee.
          nullable: true
        event_id:
          type: string
          example: '1'
          description: The associated event.
          nullable: true
        first_name:
          type: string
          example: Lucille
          description: The attendee's first name.
          nullable: true
        guests_count:
          type: integer
          example: 19
          description: Number of guests on the RSVP.
          nullable: true
        last_name:
          type: string
          example: Ball
          description: The attendee's last name.
          nullable: true
        page_id:
          type: string
          example: '1'
          description: The associated page.
          nullable: true
        prepaid:
          type: boolean
          example: false
          description: The RSVP has already been paid.
          nullable: true
        private:
          type: boolean
          example: false
          description: The RSVP is private.
          nullable: true
        tickets_count:
          type: integer
          example: 45
          description: Number of tickets sold with this RSVP.
          nullable: true
        volunteer:
          type: boolean
          example: false
          description: The attendee is a volunteer.
          nullable: true
    event_rsvp_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: event_rsvps
        attributes:
          allOf:
          - "$ref": "#/components/schemas/event_rsvp_read_write_attributes"
          - "$ref": "#/components/schemas/event_rsvp_read_only_attributes"
    event_rsvp_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/event_rsvp_response_data"
    event_rsvp_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: event_rsvps
            attributes:
              allOf:
              - "$ref": "#/components/schemas/event_rsvp_read_write_attributes"
              - "$ref": "#/components/schemas/event_rsvp_write_only_attributes"
    event_rsvp_write_only_attributes:
      type: object
      properties:
        phone_number:
          type: string
          example: '5555555555'
          description: The attendee's phone number
          nullable: true
        billing_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
          description: |2
                    Attribute used to write data to the given event_rsvp's Billing address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        mailing_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
          description: |2
                    Attribute used to write data to the given event_rsvp's Mailing address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        home_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
          description: |2
                    Attribute used to write data to the given event_rsvp's Home address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        registered_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
          description: |2
                    Attribute used to write data to the given event_rsvp's Registered address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        user_submitted_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
          description: |2
                    Attribute used to write data to the given event_rsvp's User submitted address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        work_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
          description: |2
                    Attribute used to write data to the given event_rsvp's Work address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
    event_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/event_response_data"
    event_show_response_with_required_sidepost:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/event_response_data"
        included:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: pages
              id:
                type: string
                example: '1'
              attributes:
                allOf:
                - "$ref": "#/components/schemas/page_read_write_attributes"
                - "$ref": "#/components/schemas/page_read_only_attributes"
              temp-id:
                type: string
                example: new-id
    event_ticket_level_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: event_ticket_levels
            attributes:
              "$ref": "#/components/schemas/event_ticket_level_read_write_attributes"
    event_ticket_level_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/event_ticket_level_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/event_ticket_levels?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/event_ticket_levels?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/event_ticket_levels?page[number]=3
    event_ticket_level_read_write_attributes:
      type: object
      properties:
        event_id:
          type: string
          example: '1'
          description: The ID of this ticket levels event
          nullable: true
        name:
          type: string
          example: VIP
          description: Name of the ticket level
          nullable: true
        description:
          type: string
          example: VIP tickets get exclusive access to the VIP lounge.
          description: Optional description of the ticket level displayed on event
            pages.
          nullable: true
        amount_in_cents:
          type: integer
          example: 10000
          description: Price of the ticket in cents, must be positive.
          nullable: true
        number:
          type: integer
          example: 2
          description: This field indicates how many tickets a ticket level purchases.
            This is best used when you are giving a discounted rate for couples or
            group tickets.
          nullable: true
        tickets_sold:
          type: integer
          example: 53
          description: The number of tickets already sold for this ticket level for
            the associated event
          nullable: true
        limit:
          type: integer
          example: 100
          description: The number of tickets that can be purchased for this ticket
            level for the associated event across all ticket buyers
          nullable: false
    event_ticket_level_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: event_ticket_levels
        attributes:
          "$ref": "#/components/schemas/event_ticket_level_read_write_attributes"
    event_ticket_level_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/event_ticket_level_response_data"
    event_ticket_level_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: event_ticket_levels
            attributes:
              "$ref": "#/components/schemas/event_ticket_level_read_write_attributes"
    event_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: events
            attributes:
              allOf:
              - "$ref": "#/components/schemas/event_read_write_attributes"
              - "$ref": "#/components/schemas/event_write_only_attributes"
    event_write_only_attributes:
      type: object
      properties:
        venue_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given event's Venue address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
    import_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/import_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/imports?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/imports?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/imports?page[number]=3
    import_read_only_attributes:
      type: object
      properties:
        status:
          type: string
          example: in_progress
          description: The status of the import.
          enum:
          - finished
          - unprocessable
          - queueing
          - in_progress
          nullable: true
        type:
          type: string
          example: People
          description: The import type.
          nullable: true
        is_overwritable:
          type: boolean
          example: false
          description: Flag used to determine whether non-empty fields are overwritten.
            Defaults to false.
          default: false
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        file_name:
          type: string
          example: DonationsImport.csv
          description: File name of the import.
          nullable: true
        tag_list:
          type: string
          example: donations-last-week
          description: Assign these tags to the imported signups.
          nullable: true
        content_head:
          type: string
          example: id, first_name, last_name, amount, amount_in_cents\r\n, Joe, Bloggs,
            100, 10000
          description: Comma separated list containing attribute names for the import.
          nullable: true
        rows_successful:
          type: integer
          example: 1
          description: Number of successfully imported rows.
          nullable: true
        rows_unsuccessful:
          type: integer
          example: 1
          description: Number of unsuccessfully imported rows.
          nullable: true
        started_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the import started.
          format: datetime
          nullable: true
        finished_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the import finished.
          format: datetime
          nullable: true
        error_lines:
          type: string
          example: 'error: Joe Bloggs,Amount must be at least $0.01'
          description: Errors created during the import.
          nullable: true
        rows_updated:
          type: integer
          example: 1
          description: Number of updated rows.
          nullable: true
        lines_count:
          type: integer
          example: 1
          description: Number of lines in the import.
          nullable: true
    import_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: imports
        attributes:
          "$ref": "#/components/schemas/import_read_only_attributes"
    import_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/import_response_data"
    list_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: lists
            attributes:
              "$ref": "#/components/schemas/list_read_write_attributes"
    list_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/list_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/lists?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/lists?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/lists?page[number]=3
    list_read_only_attributes:
      type: object
      properties:
        signups_count:
          type: integer
          example: '372'
          description: The number of signups on the list.
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the list was created.
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The last time the list was updated.
          format: datetime
          nullable: true
    list_read_write_attributes:
      type: object
      properties:
        name:
          type: string
          example: Contacted Supporters
          description: The name of the custom list.
          nullable: true
        signup_id:
          type: string
          example: '1'
          description: The person who this list is assigned to, not the author.
          nullable: true
        slug:
          type: string
          example: contacted_supporters
          description: A unique identifier for the list. Not required for groups.
          nullable: true
        author_id:
          type: string
          example: '1'
          description: The ID of the list's author.
          nullable: true
        is_sharing_writable:
          type: boolean
          example: false
          description: Gives edit permission to people who the list is shared.
          default: false
          nullable: true
        parent_id:
          type: string
          example: '1'
          description: The id of the original list this was split off from.
          nullable: true
        description:
          type: string
          example: All supporters that have been contacted by us
          description: Describes what the list is for.
          nullable: true
    list_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: lists
        attributes:
          allOf:
          - "$ref": "#/components/schemas/list_read_write_attributes"
          - "$ref": "#/components/schemas/list_read_only_attributes"
    list_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/list_response_data"
    list_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: lists
            attributes:
              "$ref": "#/components/schemas/list_read_write_attributes"
    mailing_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/mailing_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/mailings?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/mailings?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/mailings?page[number]=3
    mailing_read_only_attributes:
      type: object
      properties:
        slug:
          type: string
          example: acme
          description: A unique identifier.
          nullable: true
        description:
          type: string
          example: Welcome EMail
          description: An internal description of the email.
          nullable: true
        subject:
          type: string
          example: Welcome to our community
          description: The email's subject line.
          nullable: true
        from:
          type: string
          example: Broadcaster Name
          description: The from line in an email.
          nullable: true
        published_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the mailing was published.
          format: datetime
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        queued_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the mailing was queued to send.
          format: datetime
          nullable: true
        tag_list:
          type: string
          example: new-signups
          description: Comma separated list of tags used as the source of recipients
            for the mailing.
          nullable: true
        custom_list_id:
          type: string
          example: 1
          description: The list used as the source of recipients for the mailing.
          nullable: true
        send_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the mailing is scheduled to be sent.
          format: datetime
          nullable: true
        canceled_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the mailing was canceled.
          format: datetime
          nullable: true
        name:
          type: string
          example: Welcome Email
          description: The name of the email blast
          nullable: true
        preheader:
          type: string
          example: You signed up!
          description: Preheader text that is displayed in an email cient's inbox
          nullable: true
        broadcaster_id:
          type: string
          example: 1
          description: The broadcaster that created the mailing.
          nullable: true
    mailing_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: mailings
        attributes:
          "$ref": "#/components/schemas/mailing_read_only_attributes"
    mailing_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/mailing_response_data"
    membership_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: memberships
            attributes:
              allOf:
              - "$ref": "#/components/schemas/membership_read_write_attributes"
              - "$ref": "#/components/schemas/membership_write_only_attributes"
    membership_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/membership_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/memberships?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/memberships?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/memberships?page[number]=3
    membership_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        suspended_at:
          type: string
          example: '2022-10-11'
          description: When the membership was suspended.
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
    membership_read_write_attributes:
      type: object
      properties:
        grace_period_num_time_periods:
          type: integer
          example: 7
          description: Grace period to allow a signup to renew their membership after
            it expires.
          nullable: true
        grace_period_time_period_type:
          type: string
          example: days
          description: Unit of time to measure grace period.
          enum:
          - days
          - weeks
          - months
          - years
          nullable: true
        expires_on:
          type: string
          example: '2024-10-04'
          description: When the membership expires.
          nullable: true
        membership_type_id:
          type: string
          example: '1'
          description: The ID of the membership type.
          nullable: false
        signup_id:
          type: string
          example: '1'
          description: The ID of the signup.
          nullable: false
        status:
          type: string
          example: active
          description: The membership status.
          enum:
          - active
          - canceled
          - expired
          - grace period
          nullable: true
        status_reason:
          type: string
          example: Does not want to pay anymore
          description: Short text explaining why the membership is at its current
            status.
          nullable: true
        started_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the membership went into effect.
          format: datetime
          nullable: true
    membership_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: memberships
        attributes:
          allOf:
          - "$ref": "#/components/schemas/membership_read_write_attributes"
          - "$ref": "#/components/schemas/membership_read_only_attributes"
    membership_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/membership_response_data"
    membership_type_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: membership_types
            attributes:
              "$ref": "#/components/schemas/membership_type_read_write_attributes"
    membership_type_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/membership_type_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/membership_types?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/membership_types?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/membership_types?page[number]=3
    membership_type_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
    membership_type_read_write_attributes:
      type: object
      properties:
        description:
          type: string
          example: Sustaining members keep our mission going
          description: Short explanation of the membership type.
          nullable: true
        expiration_warning_num_time_periods:
          type: integer
          example: 7
          description: Amount of time to warn a signup ahead of their membership expiration.
          default: 7
          nullable: true
        expiration_warning_time_period_type:
          type: string
          example: days
          description: The unit of time used for expiration_warning_num_time_periods.
          enum:
          - days
          - weeks
          - months
          - years
          default: days
          nullable: true
        grace_period_num_time_periods:
          type: integer
          example: 3
          description: Grace period to allow a signup to renew their membership after
            it expires.
          default: 7
          nullable: true
        grace_period_time_period_type:
          type: string
          example: days
          description: Unit of time to measure grace period.
          enum:
          - days
          - weeks
          - months
          - years
          default: days
          nullable: true
        page_id:
          type: string
          example: '1'
          description: The ID of the page to renew the membership.
          nullable: true
        name:
          type: string
          example: Sustainer
          description: Membership type name.
          nullable: true
    membership_type_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: membership_types
        attributes:
          allOf:
          - "$ref": "#/components/schemas/membership_type_read_write_attributes"
          - "$ref": "#/components/schemas/membership_type_read_only_attributes"
    membership_type_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/membership_type_response_data"
    membership_type_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: membership_types
            attributes:
              "$ref": "#/components/schemas/membership_type_read_write_attributes"
    membership_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: memberships
            attributes:
              allOf:
              - "$ref": "#/components/schemas/membership_read_write_attributes"
              - "$ref": "#/components/schemas/membership_write_only_attributes"
    membership_write_only_attributes:
      type: object
      properties:
        activity_author_id:
          type: string
          example: '1'
          description: Signup ID to be used as the author of the Activity log of this
            API action
          nullable: true
        trigger_autoresponses:
          type: boolean
          example: false
          description: Whether updating the membership status to be "expired" or "grace
            period" should result in an autoresponse being sent to the member. Defaults
            to false.
          default: false
          nullable: true
    page_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: pages
            attributes:
              "$ref": "#/components/schemas/page_read_write_attributes"
    page_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/page_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/pages?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/pages?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/pages?page[number]=3
    page_read_only_attributes:
      type: object
      properties:
        url_path:
          type: string
          example: "/your-slug"
          description: URL to the page.
          nullable: true
        published_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When this page was published.
          format: datetime
          nullable: true
    page_read_write_attributes:
      type: object
      properties:
        site_id:
          type: string
          example: '1'
          description: The site this page belongs to.
          nullable: false
        author_id:
          type: string
          example: '1'
          description: The author of the page.
          nullable: true
        external_id:
          type: string
          example: abc
          description: Optional reference for pages imported from an external service.
          nullable: true
        slug:
          type: string
          example: your-slug
          description: A unique identifier that also makes up the url of the page.
            www.yoursite.com/[slug]
          nullable: true
        status:
          type: string
          example: unlisted
          description: The page status - describing the visibility of the page.
          enum:
          - archived
          - deleted
          - expired
          - hidden
          - published
          - rule_violated
          - unlisted
          nullable: false
        name:
          type: string
          example: Page Name
          description: The name of the page.
          nullable: true
        headline:
          type: string
          example: Page headline
          description: This is a header rendered above the page content.
          nullable: true
        title:
          type: string
          example: Page Title
          description: Brief page description seen on search engines.
          nullable: true
        excerpt:
          type: string
          example: Page excerpt...
          description: Longer page description used for search engine optimization.
          nullable: true
        page_type_name:
          type: string
          example: Basic
          description: The name of the page type.
          nullable: true
    page_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: pages
        attributes:
          allOf:
          - "$ref": "#/components/schemas/page_read_write_attributes"
          - "$ref": "#/components/schemas/page_read_only_attributes"
    page_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/page_response_data"
    page_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: pages
            attributes:
              "$ref": "#/components/schemas/page_read_write_attributes"
    path_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: paths
            attributes:
              "$ref": "#/components/schemas/path_read_write_attributes"
    path_history_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/path_history_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/path_histories?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/path_histories?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/path_histories?page[number]=3
    path_history_read_only_attributes:
      type: object
      properties:
        category:
          type: string
          example: step_change
          description: Categorizes the path history.
          enum:
          - step_change
          - completion
          - abandonment
          - new_point_person
          - new_current_step_point_person
          - voiding
          - reactivation
          -
          nullable: true
        current_step_point_person_id:
          type: string
          example: '1'
          description: The point person for the current step.
          nullable: true
        path_journey_id:
          type: string
          example: '1'
          description: The associated path journey.
          nullable: true
        path_journey_status_change_id:
          type: string
          example: '1'
          description: The associated path journey status change.
          nullable: true
        path_step_id:
          type: string
          example: '1'
          description: The associated path step.
          nullable: true
        point_person_id:
          type: string
          example: '1'
          description: The point person.
          nullable: true
        recruiter_id:
          type: string
          example: '1'
          description: The recruiter.
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
    path_history_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: path_histories
        attributes:
          "$ref": "#/components/schemas/path_history_read_only_attributes"
    path_history_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/path_history_response_data"
    path_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/path_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/paths?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/paths?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/paths?page[number]=3
    path_journey_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: path_journeys
            attributes:
              "$ref": "#/components/schemas/path_journey_read_write_attributes"
    path_journey_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/path_journey_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/path_journeys?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/path_journeys?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/path_journeys?page[number]=3
    path_journey_read_only_attributes:
      type: object
      properties:
        ended_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the path ended.
          format: datetime
          nullable: true
        journey_status:
          type: string
          example: active
          description: The current path journey status.
          enum:
          - active
          - completed
          - abandoned
          - deleted
          default: active
          nullable: true
        last_moved_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The last time the signup moved along the path journey.
          format: datetime
          nullable: true
        path_journey_status_change_id:
          type: string
          example: '1'
          description: The ID of the status change.
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
    path_journey_read_write_attributes:
      type: object
      properties:
        current_step_due_date:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the current step is due.
          format: datetime
          nullable: true
        current_step_point_person_id:
          type: string
          example: '1'
          description: The point person of the current step.
          nullable: true
        current_step_id:
          type: string
          example: '1'
          description: The ID of the current step.
          nullable: true
        description:
          type: string
          example: Added by API
          description: This is the description on the signup's path.
          nullable: true
        due_date:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the path is due to be completed.
          format: datetime
          nullable: true
        path_id:
          type: string
          example: '1'
          description: The associated path.
          nullable: true
        point_person_id:
          type: string
          example: '1'
          description: The point person of this path journey.
          nullable: true
        signup_id:
          type: string
          example: '1'
          description: The signup assigned to the path journey
          nullable: true
        value_amount:
          type: string
          example: '5.00'
          description: Values are enabled by the path and assigned to the path journey.
          format: float
          nullable: true
    path_journey_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: path_journeys
        attributes:
          allOf:
          - "$ref": "#/components/schemas/path_journey_read_write_attributes"
          - "$ref": "#/components/schemas/path_journey_read_only_attributes"
    path_journey_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/path_journey_response_data"
    path_journey_status_change_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: path_journey_status_changes
            attributes:
              "$ref": "#/components/schemas/path_journey_status_change_read_write_attributes"
    path_journey_status_change_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/path_journey_status_change_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/path_journey_status_changes?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/path_journey_status_changes?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/path_journey_status_changes?page[number]=3
    path_journey_status_change_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
    path_journey_status_change_read_write_attributes:
      type: object
      properties:
        path_id:
          type: string
          example: '1'
          description: The assigned path.
          nullable: false
        name:
          type: string
          example: Decided to quit
          description: Short name describing the status change.
          nullable: false
        target_status:
          type: string
          example: completed
          description: The intended status of the path after this status change.
          enum:
          - abandoned
          - completed
          nullable: false
    path_journey_status_change_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: path_journey_status_changes
        attributes:
          allOf:
          - "$ref": "#/components/schemas/path_journey_status_change_read_write_attributes"
          - "$ref": "#/components/schemas/path_journey_status_change_read_only_attributes"
    path_journey_status_change_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/path_journey_status_change_response_data"
    path_journey_status_change_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: path_journey_status_changes
            attributes:
              "$ref": "#/components/schemas/path_journey_status_change_read_write_attributes"
    path_journey_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: path_journeys
            attributes:
              type: object
              properties:
                current_step_due_date:
                  type: string
                  example: '2019-10-26T10:00:00-04:00'
                  description: When the current step is due.
                  format: datetime
                  nullable: true
                current_step_point_person_id:
                  type: string
                  example: '1'
                  description: The point person of the current step.
                  nullable: true
                current_step_id:
                  type: string
                  example: '1'
                  description: The ID of the current step.
                  nullable: true
                description:
                  type: string
                  example: Added by API
                  description: This is the description on the signup's path.
                  nullable: true
                due_date:
                  type: string
                  example: '2019-10-26T10:00:00-04:00'
                  description: When the path is due to be completed.
                  format: datetime
                  nullable: true
                point_person_id:
                  type: string
                  example: '1'
                  description: The point person of this path journey.
                  nullable: true
                signup_id:
                  type: string
                  example: '1'
                  description: The signup assigned to the path journey
                  nullable: true
                value_amount:
                  type: string
                  example: '5.00'
                  description: Values are enabled by the path and assigned to the
                    path journey.
                  format: float
                  nullable: true
    path_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
    path_read_write_attributes:
      type: object
      properties:
        default_due_date_interval:
          type: string
          example: none
          description: Default interval path is expected to be completed by when due
            date is enabled.
          enum:
          - none
          - same_day
          - one_day
          - two_day
          - three_day
          - four_day
          - five_day
          - six_day
          - one_week
          - two_week
          - thirty_day
          - two_month
          - three_month
          - six_month
          - one_year
          nullable: true
        default_point_person_id:
          type: string
          example: '1'
          description: Default point person.
          nullable: true
        default_value_amount:
          type: string
          example: '3.50'
          description: Default value when value amount is enabled.
          format: float
          nullable: true
        due_date_is_enabled:
          type: boolean
          example: false
          description: Enabled due dates for the path.
          default: false
          nullable: true
        name:
          type: string
          example: Attend a fundraiser
          description: Name of the path.
          nullable: true
        value_amount_is_enabled:
          type: boolean
          example: false
          description: Enables the path to have a value amount.
          default: false
          nullable: true
    path_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: paths
        attributes:
          allOf:
          - "$ref": "#/components/schemas/path_read_write_attributes"
          - "$ref": "#/components/schemas/path_read_only_attributes"
    path_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/path_response_data"
    path_step_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: path_steps
            attributes:
              "$ref": "#/components/schemas/path_step_read_write_attributes"
    path_step_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/path_step_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/path_steps?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/path_steps?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/path_steps?page[number]=3
    path_step_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
    path_step_read_write_attributes:
      type: object
      properties:
        default_due_date_interval:
          type: string
          example: none
          description: The default amount of time the step is due after being started.
          enum:
          - none
          - same_day
          - one_day
          - two_day
          - three_day
          - four_day
          - five_day
          - six_day
          - one_week
          - two_week
          - thirty_day
          - two_month
          - three_month
          - six_month
          - one_year
          -
          nullable: true
        default_point_person_id:
          type: string
          example: '1'
          description: The default point person.
          nullable: true
        name:
          type: string
          example: Attend a fundraiser
          description: Name of the step.
          nullable: true
        path_id:
          type: string
          example: '1'
          description: The path the step is assigned to.
          nullable: true
        position:
          type: integer
          example: 1
          description: The position in the path the step belongs to.
          nullable: true
    path_step_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: path_steps
        attributes:
          allOf:
          - "$ref": "#/components/schemas/path_step_read_write_attributes"
          - "$ref": "#/components/schemas/path_step_read_only_attributes"
    path_step_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/path_step_response_data"
    path_step_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: path_steps
            attributes:
              "$ref": "#/components/schemas/path_step_read_write_attributes"
    path_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: paths
            attributes:
              "$ref": "#/components/schemas/path_read_write_attributes"
    petition_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: petitions
            attributes:
              allOf:
              - "$ref": "#/components/schemas/petition_read_write_attributes"
              - "$ref": "#/components/schemas/petition_write_only_attributes"
            relationships:
              type: object
              properties:
                page:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        type:
                          type: string
                          example: pages
                        temp-id:
                          type: string
                          example: new-id
                        method:
                          type: string
                          example: create
        included:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: pages
              temp-id:
                type: string
                example: new-id
              attributes:
                "$ref": "#/components/schemas/page_read_write_attributes"
    petition_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/petition_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/petitions?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/petitions?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/petitions?page[number]=3
    petition_read_write_attributes:
      type: object
      properties:
        intro:
          type: string
          example: Petition intro
          description: The intro is rendered on the petition page above the content.
          nullable: true
        content:
          type: string
          example: Petition content
          description: The content is rendered on the petition page.
          nullable: true
        goal:
          type: integer
          example: 5
          description: The number of signatures you want this petition to receive.
          default: 0
          nullable: true
        additional_signatures_count:
          type: integer
          example: 10
          description: Number of offline signatures to add to the signature count
            total.
          default: 0
          nullable: true
        signature_name:
          type: string
          example: endorsement
          description: What you call a signature.
          nullable: true
        is_auto_response:
          type: boolean
          example: false
          description: Sends an autoresponse to a signup after signing the petition.
          default: true
          nullable: true
        auto_response_broadcaster_id:
          type: string
          example: '1'
          description: The broadcaster that sends the autoresponse.
          nullable: true
        auto_response_subject:
          type: string
          example: Auto response subject
          description: The subject in the autoresponse email.
          nullable: true
        auto_response_content:
          type: string
          example: Auto response content
          description: The content of the autoresponse email.
          nullable: true
        gather_volunteers:
          type: boolean
          example: false
          description: Ask for signers to volunteer.
          nullable: true
        petition_form_address:
          type: string
          example: required
          description: Require or ask signers to include their address in the signature.
          enum:
          - required
          - optional
          - hidden
          nullable: true
        petition_form_phone:
          type: string
          example: optional
          description: Require or ask signers to include their phone number in the
            signature.
          enum:
          - required
          - optional
          - hidden
          nullable: true
    petition_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: petitions
        attributes:
          "$ref": "#/components/schemas/petition_read_write_attributes"
    petition_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/petition_response_data"
    petition_show_response_with_required_sidepost:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/petition_response_data"
        included:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: pages
              id:
                type: string
                example: '1'
              attributes:
                allOf:
                - "$ref": "#/components/schemas/page_read_write_attributes"
                - "$ref": "#/components/schemas/page_read_only_attributes"
              temp-id:
                type: string
                example: new-id
    petition_signature_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: petition_signatures
            attributes:
              allOf:
              - "$ref": "#/components/schemas/petition_signature_read_write_attributes"
              - "$ref": "#/components/schemas/petition_signature_write_only_attributes"
    petition_signature_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/petition_signature_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/petition_signatures?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/petition_signatures?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/petition_signatures?page[number]=3
    petition_signature_read_only_attributes:
      type: object
      properties:
        page_id:
          type: string
          example: '1'
          description: The associated page.
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    petition_signature_read_write_attributes:
      type: object
      properties:
        petition_id:
          type: string
          example: '1'
          description: The petition this signature belongs to.
          nullable: true
        recruiter_id:
          type: string
          example: '1'
          description: The recruiter of this signature.
          nullable: true
        signup_id:
          type: string
          example: '1'
          description: The signup is the person that signed the petition.
          nullable: true
        is_private:
          type: boolean
          example: false
          description: Private signatures are not published on the website.
          default: false
          nullable: true
        comment:
          type: string
          example: I agree
          description: Comment left by the signup displayed with their signature on
            the site.
          nullable: true
    petition_signature_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: petition_signatures
        attributes:
          allOf:
          - "$ref": "#/components/schemas/petition_signature_read_write_attributes"
          - "$ref": "#/components/schemas/petition_signature_read_only_attributes"
    petition_signature_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/petition_signature_response_data"
    petition_signature_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: petition_signatures
            attributes:
              allOf:
              - "$ref": "#/components/schemas/petition_signature_read_write_attributes"
              - "$ref": "#/components/schemas/petition_signature_write_only_attributes"
    petition_signature_write_only_attributes:
      type: object
      properties:
        trigger_autoresponses:
          type: boolean
          example: false
          description: Whether the creation of this petition signature should result
            in an autoresponse being sent to the signer. Defaults to false.
          default: false
          nullable: true
    petition_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: petitions
            attributes:
              allOf:
              - "$ref": "#/components/schemas/petition_read_write_attributes"
              - "$ref": "#/components/schemas/petition_write_only_attributes"
    petition_write_only_attributes:
      type: object
      properties:
        page_id:
          type: string
          example: '1'
          description: The associated page.
          nullable: true
    pledge_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: pledges
            attributes:
              "$ref": "#/components/schemas/pledge_read_write_attributes"
    pledge_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/pledge_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/pledges?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/pledges?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/pledges?page[number]=3
    pledge_read_only_attributes:
      type: object
      properties:
        amount:
          type: string
          example: '5.00'
          description: Formatted amount of the pledge.
          nullable: true
        amount_left_in_cents:
          type: integer
          example: 300
          description: Amount donated by the signup minus the amount pledged.
          default: 0
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    pledge_read_write_attributes:
      type: object
      properties:
        amount_in_cents:
          type: integer
          example: 500
          description: The amount of cents pledged.
          default: 0
          nullable: true
        is_private:
          type: boolean
          example: false
          description: Private pledges are not displayed on the site.
          default: false
          nullable: true
        author_id:
          type: string
          example: '1'
          description: The author of the pledge.
          nullable: true
        donation_tracking_code_id:
          type: string
          example: '1'
          description: The associated donation tracking code.
          nullable: true
        page_id:
          type: string
          example: '1'
          description: The page this pledge belongs to.
          nullable: true
        recruiter_id:
          type: string
          example: '1'
          description: The recruiter of the pledge.
          nullable: true
        signup_id:
          type: string
          example: '1'
          description: The signup is the person that made the pledge.
          nullable: true
    pledge_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: pledges
        attributes:
          allOf:
          - "$ref": "#/components/schemas/pledge_read_write_attributes"
          - "$ref": "#/components/schemas/pledge_read_only_attributes"
    pledge_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/pledge_response_data"
    pledge_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: pledges
            attributes:
              "$ref": "#/components/schemas/pledge_read_write_attributes"
    precinct_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: precincts
            attributes:
              "$ref": "#/components/schemas/precinct_read_write_attributes"
    precinct_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/precinct_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/precincts?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/precincts?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/precincts?page[number]=3
    precinct_read_write_attributes:
      type: object
      properties:
        code:
          type: string
          example: '123'
          description: Precinct code
          nullable: true
        name:
          type: string
          example: abc
          description: Name of the precinct.
          nullable: true
        point_person_id:
          type: string
          example: '1'
          description: The point person for this precinct.
          nullable: true
    precinct_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: precincts
        attributes:
          "$ref": "#/components/schemas/precinct_read_write_attributes"
    precinct_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/precinct_response_data"
    precinct_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: precincts
            attributes:
              "$ref": "#/components/schemas/precinct_read_write_attributes"
    relationship_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: relationships
            attributes:
              "$ref": "#/components/schemas/relationship_read_write_attributes"
    relationship_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/relationship_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/relationships?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/relationships?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/relationships?page[number]=3
    relationship_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: false
    relationship_read_write_attributes:
      type: object
      properties:
        first_signup_id:
          type: string
          example: '1'
          description: The first signup listed in the relationship.
          nullable: false
        second_signup_id:
          type: string
          example: '2'
          description: The second signup listed in the relationship.
          nullable: false
        relationship_type:
          type: string
          example: member-organization
          description: Describes the relationship as first_signup-second_signup.
          enum:
          - affiliate-affiliate
          - alum-school
          - assistant-assisted
          - board_member-organization
          - candidate-committee
          - chapter-parent
          - child-parent
          - consultant-organization
          - employee-employer
          - family_partner-family_partner
          - friend-friend
          - member-organization
          - mentee-mentor
          - partner-partner
          - primary_contact-organization
          - relative-relative
          - representative-constituent
          - resident-organization
          - sibling-sibling
          - spouse-spouse
          - student-school
          - student-teacher
          - subordinate-manager
          - subsidiary-parent
          - treasurer-committee
          nullable: false
        title:
          type: string
          example: Executive Assistant
          description: Optional description to provide to the relationship.
          nullable: true
    relationship_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: relationships
        attributes:
          allOf:
          - "$ref": "#/components/schemas/relationship_read_write_attributes"
          - "$ref": "#/components/schemas/relationship_read_only_attributes"
    relationship_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/relationship_response_data"
    relationship_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: relationships
            attributes:
              "$ref": "#/components/schemas/relationship_read_write_attributes"
    signup_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: signups
            attributes:
              allOf:
              - "$ref": "#/components/schemas/signup_read_write_attributes"
              - "$ref": "#/components/schemas/signup_write_only_attributes"
    signup_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/signup_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/signups?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/signups?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/signups?page[number]=3
    signup_profile_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: signup_profiles
            attributes:
              "$ref": "#/components/schemas/signup_profile_read_write_attributes"
    signup_profile_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/signup_profile_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/signup_profiles?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/signup_profiles?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/signup_profiles?page[number]=3
    signup_profile_read_write_attributes:
      type: object
      properties:
        signup_id:
          type: string
          example: '1'
          description: The signup that belongs to this profile.
          nullable: false
        bio:
          type: string
          example: My bio
          description: Content displayed on the profile page.
          nullable: true
        website:
          type: string
          example: https://www.website.com
          description: Website belonging to the profile. Rendered alongside the bio.
          nullable: true
    signup_profile_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: signup_profiles
        attributes:
          "$ref": "#/components/schemas/signup_profile_read_write_attributes"
    signup_profile_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/signup_profile_response_data"
    signup_profile_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: signup_profiles
            attributes:
              "$ref": "#/components/schemas/signup_profile_read_write_attributes"
    signup_read_only_attributes:
      type: object
      properties:
        email1_is_bouncing:
          type: boolean
          example: false
          description: Email marked as bounced
          nullable: true
        email2_is_bouncing:
          type: boolean
          example: false
          description: Email marked as bounced
          nullable: true
        email3_is_bouncing:
          type: boolean
          example: false
          description: Email marked as bounced
          nullable: true
        email4_is_bouncing:
          type: boolean
          example: false
          description: Email marked as bounced
          nullable: true
        full_name:
          type: string
          example: Lucy Octavia Butler
          description: Signup's full name.
          nullable: true
        is_cpu:
          type: boolean
          example: false
          description: Is the signup a control panel user
          nullable: true
        is_donor:
          type: boolean
          example: false
          description: The signup is a donor.
          nullable: true
        note_updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: Last time the note was updated.
          format: datetime
          nullable: true
        priority_level_changed_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The last time the priority level changed.
          format: datetime
          nullable: true
        profile_content_html:
          type: string
          example: "<h1>My Profile</h1>"
          description: HTML formatted version of the signup's profile contents.
          nullable: true
        support_level_changed_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the signups support level changed.
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    signup_read_write_attributes:
      type: object
      properties:
        born_at:
          type: string
          example: '1990-08-06'
          description: The date the signup was born.
          nullable: true
        city_district:
          type: string
          example: Trinity-Spadina (19)
          description: The city district code the signup belongs to.
          nullable: true
        civicrm_id:
          type: string
          example: '1'
          description: The ID of the CiviCRM account the signup is associated with.
          nullable: true
        county_district:
          type: string
          example: City of Portsmouth (B)
          description: The county district the signup belongs to.
          nullable: true
        county_file_id:
          type: string
          example: '1'
          description: The ID of the county voter file belonging to the signup.
          nullable: true
        datatrust_id:
          type: string
          example: '1'
          description: The ID of the associated Datatrust account.
          nullable: true
        do_not_call:
          type: boolean
          example: false
          description: Signup has asked not to be contacted via phone call.
          default: false
          nullable: true
        do_not_contact:
          type: boolean
          example: false
          description: Signup has asked not to be contacted.
          default: false
          nullable: true
        dw_id:
          type: string
          example: '1'
          description: The Catalist ID associated with the signup.
          nullable: true
        email:
          type: string
          example: test@example.com
          description: The signup's email address.
          nullable: true
        email_opt_in:
          type: boolean
          example: false
          description: The signup has opted in to receive emails.
          default: true
          nullable: true
        employer:
          type: string
          example: NationBuilder
          description: The signup's employer.
          nullable: true
        external_id:
          type: string
          example: '1'
          description: A unique identifier from a third party.
          nullable: true
        federal_district:
          type: string
          example: Congressional District 40
          description: Federal voting district the signup belongs to.
          nullable: true
        fire_district:
          type: string
          example: Jackson
          description: Political district only available in a voter file import.
          nullable: true
        first_name:
          type: string
          example: Lucy
          description: Signup's first name.
          nullable: true
        is_volunteer:
          type: boolean
          example: false
          description: The signup is a volunteer in your nation.
          default: false
          nullable: true
        judicial_district:
          type: string
          example: '1'
          description: Political district only available in a voter file import.
          nullable: true
        labour_region:
          type: string
          example: '1'
          description: British voting district.
          nullable: true
        last_name:
          type: string
          example: Butler
          description: The signup's last name.
          nullable: true
        mobile_number:
          type: string
          example: '1234567890'
          description: The signup's cell phone number.
          nullable: true
        mobile_opt_in:
          type: boolean
          example: false
          description: The signup has opted in to mobile phone contact.
          default: true
          nullable: true
        middle_name:
          type: string
          example: Octavia
          description: Signup's middle name.
          nullable: true
        ngp_id:
          type: string
          example: '1'
          description: ID from associated NGP account.
          nullable: true
        note:
          type: string
          example: Good talk
          description: Important information to remember about the signup.
          nullable: true
        occupation:
          type: string
          example: Software engineer
          description: The signup's occupation.
          nullable: true
        party:
          type: string
          example: P
          description: Single letter abbreviation for political party.
          nullable: true
        pf_strat_id:
          type: string
          example: '1'
          description: PoliticalFORCE ID.
          nullable: true
        phone_number:
          type: string
          example: '1234567890'
          description: Signup's phone number.
          nullable: true
        precinct_id:
          type: string
          example: '1'
          description: Voting precinct the signup belongs to.
          nullable: true
        recruiter_id:
          type: string
          example: '1'
          description: ID of the signup's recruiter (also a signup).
          nullable: true
        rnc_id:
          type: string
          example: '1'
          description: RNC ID.
          nullable: true
        rnc_regid:
          type: string
          example: '1'
          description: RNC registration ID.
          nullable: true
        salesforce_id:
          type: string
          example: '1'
          description: ID of the associated Salesforce account.
          nullable: true
        school_district:
          type: string
          example: '1'
          description: School district the signup belongs to.
          nullable: true
        school_sub_district:
          type: string
          example: '1'
          description: School sub-district the signup belongs to.
          nullable: true
        sex:
          type: string
          example: F
          description: 'Must be a single letter: M, F, or O (male, female, or other).'
          nullable: true
        signup_type:
          type: integer
          example: 1
          description: 'Indicates whether the record represents a person or an organization.
            Must be a single digit: 0 or 1 (0=person, 1=organization).'
          default: 0
          nullable: false
        state_file_id:
          type: string
          example: '1'
          description: Unique identifier if mapped with the registered state field.
            May be zero filled to number of digits defined by state.
          nullable: true
        state_lower_district:
          type: string
          example: Assembly District 35
          description: Voting district.
          nullable: true
        state_upper_district:
          type: string
          example: State Senate District 19
          description: Voting district.
          nullable: true
        support_level:
          type: integer
          example: 1
          description: A number from 1-5. 1=very strong support and 5=very strong
            opposition.
          nullable: true
        supranational_district:
          type: string
          example: London Euro Region
          description: Voting district.
          nullable: true
        van_id:
          type: string
          example: '1'
          description: ID of the associated VAN account.
          nullable: true
        village_district:
          type: string
          example: '1'
          description: Political district only available in a voter file import.
          nullable: true
        ward:
          type: string
          example: '1'
          description: Political district only available in a voter file import.
          nullable: true
        work_phone_number:
          type: string
          example: '1234567890'
          description: Signup's work phone number.
          nullable: true
        author_id:
          type: string
          example: '1'
          description: ID of the person interacting with the signup in the control
            panel.
          nullable: true
        availability:
          type: string
          example: Saturday morning
          description: When can this signup be contacted?
          nullable: true
        banned_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the signup was banned.
          format: datetime
          nullable: true
        capital_amount_in_cents:
          type: integer
          example: 500
          description: The amount of political capital this signup has accrued
          default: 0
          nullable: true
        church:
          type: string
          example: Unity Church
          description: The name of the church the signup belongs to.
          nullable: true
        city_sub_district:
          type: string
          example: DOWNTOWN LOS ANGELES
          description: Political district.
          nullable: true
        contact_status:
          type: string
          example: answered
          description: Name of the associated contact status.
          enum:
          - other
          - answered
          - bad_info
          - left_message
          - meaningful_interaction
          - send_information
          - not_interested
          - no_answer
          - refused
          - inaccessible
          -
          nullable: true
        could_vote_status:
          type: integer
          example: 1
          description: Integer representing if the signup can vote. 1=can vote, -1=can't
            vote.
          nullable: true
        demo:
          type: string
          example: H
          description: Single letter representation of demographic.
          nullable: true
        donations_amount_in_cents:
          type: integer
          example: 500
          description: Sum of donations made by the signup.
          default: 0
          nullable: true
        donations_amount_this_cycle_in_cents:
          type: integer
          example: 500
          description: Sum of donations made by the signup in the current cycle.
          default: 0
          nullable: true
        donations_count:
          type: integer
          example: 5
          description: Number of donations made by the signup.
          default: 0
          nullable: true
        donations_count_this_cycle:
          type: integer
          example: 5
          description: Number of donations made by the signup in the current cycle.
          default: 0
          nullable: true
        donations_pledged_amount_in_cents:
          type: integer
          example: 500
          description: Sum of pledges made by the signup.
          default: 0
          nullable: true
        donations_raised_amount_in_cents:
          type: integer
          example: 500
          description: Sum of donations raised by the signup.
          default: 0
          nullable: true
        donations_raised_amount_this_cycle_in_cents:
          type: integer
          example: 500
          description: Sum of donations raised by the signup in the current cycle.
          default: 0
          nullable: true
        donations_raised_count:
          type: integer
          example: 5
          description: Number of donations raised by this signup.
          default: 0
          nullable: true
        donations_raised_count_this_cycle:
          type: integer
          example: 5
          description: Number of donations raised by this signup in the current cycle.
          default: 0
          nullable: true
        donations_to_raise_amount_in_cents:
          type: integer
          example: 500
          description: Sum of donations that need to be raised.
          default: 0
          nullable: true
        email1:
          type: string
          example: example@example.com
          description: Email address for the signup.
          nullable: true
        email1_is_bad:
          type: boolean
          example: false
          description: The address is not emailable.
          default: false
          nullable: true
        email2:
          type: string
          example: example@example.com
          description: Email address for the signup.
          nullable: true
        email2_is_bad:
          type: boolean
          example: false
          description: The address is not emailable.
          default: false
          nullable: true
        email3:
          type: string
          example: example@example.com
          description: Email address for the signup.
          nullable: true
        email3_is_bad:
          type: boolean
          example: false
          description: The address is not emailable.
          default: false
          nullable: true
        email4:
          type: string
          example: example@example.com
          description: Email address for the signup.
          nullable: true
        email4_is_bad:
          type: boolean
          example: false
          description: The address is not emailable.
          default: false
          nullable: true
        ethnicity:
          type: string
          example: Hawaiian
          description: Signup's ethnicity.
          nullable: true
        fax_number:
          type: string
          example: '1234567890'
          description: Signup's fax number.
          nullable: true
        federal_donotcall:
          type: boolean
          example: false
          description: Is the signup on the federal do not call list?
          default: false
          nullable: true
        first_donated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The first time the signup made a donation.
          format: datetime
          nullable: true
        first_fundraised_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The first time the signup fundraised.
          format: datetime
          nullable: true
        first_prospect_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The first time the signup was marked as a prospect.
          format: datetime
          nullable: true
        first_recruited_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The first time the signup recruited another signup.
          format: datetime
          nullable: true
        first_supporter_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The first time the signup was marked as a supporter.
          format: datetime
          nullable: true
        first_volunteer_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The first time the signup volunteered.
          format: datetime
          nullable: true
        import_id:
          type: string
          example: '1'
          description: The id of the import that added the signup.
          nullable: true
        inferred_party:
          type: string
          example: P
          description: Single letter representation of the signup's inferred political
            party.
          nullable: true
        inferred_support_level:
          type: integer
          example: 1
          description: The signup's inferred support level. 1=very strong support
            and 5=very strong opposition.
          nullable: true
        is_deceased:
          type: boolean
          example: false
          description: The signup is deceased.
          default: false
          nullable: true
        is_fundraiser:
          type: boolean
          example: false
          description: The signup is a fundraiser.
          default: false
          nullable: true
        is_ignore_donation_limits:
          type: boolean
          example: false
          description: Ignore donation limits for this signup.
          default: false
          nullable: true
        is_leaderboardable:
          type: boolean
          example: false
          description: The signup can appear on leaderboards.
          default: true
          nullable: true
        is_mobile_bad:
          type: boolean
          example: false
          description: The signup's mobile number is bad.
          default: false
          nullable: true
        is_possible_duplicate:
          type: boolean
          example: false
          description: The signup could be a duplicate.
          default: false
          nullable: true
        is_profile_private:
          type: boolean
          example: false
          description: The signup's profile is private.
          default: false
          nullable: true
        is_profile_searchable:
          type: boolean
          example: false
          description: The profile is searchable.
          default: true
          nullable: true
        is_prospect:
          type: boolean
          example: false
          description: The signup is a prospect.
          default: false
          nullable: true
        is_supporter:
          type: boolean
          example: false
          description: The signup is a supporter.
          default: true
          nullable: true
        is_survey_question_private:
          type: boolean
          example: false
          description: Survey questions are private for this signup.
          default: false
          nullable: true
        language:
          type: string
          example: EN
          description: The primary language of the signup.
          nullable: true
        last_call_id:
          type: string
          example: '1'
          description: ID of the last call made to the signup.
          nullable: true
        last_contacted_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The last time the signup was contacted.
          format: datetime
          nullable: true
        last_contacted_by_id:
          type: string
          example: '1'
          description: The ID of the user that last contacted the signup.
          nullable: true
        last_donated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The last time the signup donated.
          format: datetime
          nullable: true
        last_fundraised_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The last time the signup fundraised.
          format: datetime
          nullable: true
        last_rule_violation_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: The last time the signup violated a rule.
          format: datetime
          nullable: true
        legal_name:
          type: string
          example: Lucy Octavia Butler
          description: The signup's legal name.
          nullable: true
        locale:
          type: string
          example: en
          description: Letter code representing the signup\s language.
          nullable: true
        marital_status:
          type: string
          example: S
          description: Single letter representation of the signup's marital status.
          nullable: true
        parent_id:
          type: string
          example: '1'
          description: Signup's parent ID.
          nullable: true
        party_member:
          type: boolean
          example: false
          description: Political party membership.
          nullable: true
        phone_time:
          type: string
          example: 7:00pm
          description: Best time to contact the signup.
          nullable: true
        prefix:
          type: string
          example: Dr.
          description: Signup's prefix.
          nullable: true
        previous_party:
          type: string
          example: D
          description: Single letter representing the signup's previous political
            party affiliation.
          nullable: true
        primary_email_id:
          type: integer
          example: 1
          description: The email column containing the primary email of the signup.
          enum:
          -
          - 1
          - 2
          - 3
          - 4
          default: 1
          nullable: true
        priority_level:
          type: integer
          example: 1
          description: Priority level of the signup.
          nullable: true
        profile_content:
          type: string
          example: Profile content
          description: The contents of the signup's profile.
          nullable: true
        profile_headline:
          type: string
          example: My Profile
          description: Headline of the signup's profile.
          nullable: true
        received_capital_amount_in_cents:
          type: integer
          example: 500
          description: Amount of social capital received.
          default: 0
          nullable: true
        registered_at:
          type: string
          example: '2022-06-01'
          description: When was the signup registered.
          nullable: true
        religion:
          type: string
          example: Internet
          description: Signup's religion.
          nullable: true
        rule_violations_count:
          type: integer
          example: 5
          description: Number of rules the signup has violated.
          default: 0
          nullable: true
        spent_capital_amount_in_cents:
          type: integer
          example: 500
          description: Amount of social capital spent.
          default: 0
          nullable: true
        submitted_address:
          type: string
          example: 123 Test Drive, Los Angeles, CA
          description: The address submitted by the signup.
          nullable: true
        suffix:
          type: string
          example: Jr.
          description: Signup's suffix.
          nullable: true
        township:
          type: string
          example: Van Buren
          description: Political district only available in a voter file import.
          nullable: true
        unsubscribed_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the signup unsubscribed.
          format: datetime
          nullable: true
        username:
          type: string
          example: username
          description: Signup's username.
          nullable: true
        warnings_count:
          type: integer
          example: 5
          description: Number of warnings given to the signup.
          default: 0
          nullable: true
        custom_values:
          type: object
          example:
            custom_text: Text Value
            custom_number: '22'
            custom_checkbox: true
            custom_multi: Some multiple choice option
          description: Values for nation-defined fields on signup
          nullable: true
    signup_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: signups
        attributes:
          allOf:
          - "$ref": "#/components/schemas/signup_read_write_attributes"
          - "$ref": "#/components/schemas/signup_read_only_attributes"
    signup_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/signup_response_data"
    signup_tag_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: signup_tags
            attributes:
              "$ref": "#/components/schemas/signup_tag_read_write_attributes"
    signup_tag_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/signup_tag_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/signup_tags?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/signup_tags?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/signup_tags?page[number]=3
    signup_tag_read_only_attributes:
      type: object
      properties:
        imported:
          type: boolean
          example: false
          description: The tag was created from an import.
          nullable: true
        shared_with_nations:
          type: boolean
          example: false
          description: This tag is shared with other nations.
          nullable: true
        from_sharing_nation:
          type: boolean
          example: false
          description: This tag was shared from another nation.
          nullable: true
        taggings_count:
          type: integer
          example: 0
          description: The number of signup taggings associated with this tag.
          default: 0
          nullable: true
    signup_tag_read_write_attributes:
      type: object
      properties:
        name:
          type: string
          example: tag_name
          description: Must be a unique, case-insensitive string
          default: ''
          nullable: true
    signup_tag_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: signup_tags
        attributes:
          allOf:
          - "$ref": "#/components/schemas/signup_tag_read_write_attributes"
          - "$ref": "#/components/schemas/signup_tag_read_only_attributes"
    signup_tag_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/signup_tag_response_data"
    signup_tag_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: signup_tags
            attributes:
              "$ref": "#/components/schemas/signup_tag_read_write_attributes"
    signup_tagging_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: signup_taggings
            attributes:
              "$ref": "#/components/schemas/signup_tagging_read_write_attributes"
    signup_tagging_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/signup_tagging_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/signup_taggings?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/signup_taggings?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/signup_taggings?page[number]=3
    signup_tagging_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    signup_tagging_read_write_attributes:
      type: object
      properties:
        signup_id:
          type: string
          example: '1'
          description: The signup that was tagged.
          nullable: false
        tag_id:
          type: string
          example: '1'
          description: The tag assigned to the signup.
          nullable: false
    signup_tagging_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: signup_taggings
        attributes:
          allOf:
          - "$ref": "#/components/schemas/signup_tagging_read_write_attributes"
          - "$ref": "#/components/schemas/signup_tagging_read_only_attributes"
    signup_tagging_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/signup_tagging_response_data"
    signup_tagging_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: signup_taggings
            attributes:
              "$ref": "#/components/schemas/signup_tagging_read_write_attributes"
    signup_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: signups
            attributes:
              allOf:
              - "$ref": "#/components/schemas/signup_read_write_attributes"
              - "$ref": "#/components/schemas/signup_write_only_attributes"
    signup_write_only_attributes:
      type: object
      properties:
        billing_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given signup's Billing address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        mailing_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given signup's Mailing address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        home_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given signup's Home address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        registered_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given signup's Registered address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        user_submitted_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given signup's User submitted address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
        work_address_attributes:
          type: object
          example:
            address1: 20 W 34th St.
            address2: Suite 100
            address3:
            city: New York
            state: NY
            zip: '10001'
            county: New York County
            country_code: US
            lat: '40.7484'
            lng: '73.9857'
            fips: '04'
            submitted_address: 20 W 34th St. Suite 100, New York, NY 10001
            distance: 0
            import_id: '2'
            work_phone: '5555555555'
            phone_number: '5555555555'
            phone_country_code: '1'
            work_phone_number: '5555555555'
            delete: true
          description: |2
                    Attribute used to write data to the given signup's Work address.
                    When an address already exists, provided values will be used to patch the existing address data,
                    only overwriting values provided in the payload.
                    When no address exists, the existing data will be used to persist a new address.
          nullable: true
    site_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/site_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/sites?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/sites?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/sites?page[number]=3
    site_read_only_attributes:
      type: object
      properties:
        name:
          type: string
          example: My Website
          description: The name of the site.
          nullable: true
        slug:
          type: string
          example: example-slug
          description: Unique identifier included in the url.
          nullable: true
        domain:
          type: string
          example: example-site.com
          description: Custom domain the site is pointing to.
          nullable: true
    site_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: sites
        attributes:
          "$ref": "#/components/schemas/site_read_only_attributes"
    site_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/site_response_data"
    survey_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: surveys
            attributes:
              "$ref": "#/components/schemas/survey_read_write_attributes"
    survey_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/survey_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/surveys?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/surveys?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/surveys?page[number]=3
    survey_question_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: survey_questions
            attributes:
              "$ref": "#/components/schemas/survey_question_read_write_attributes"
    survey_question_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/survey_question_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/survey_questions?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/survey_questions?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/survey_questions?page[number]=3
    survey_question_possible_response_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: survey_question_possible_responses
            attributes:
              "$ref": "#/components/schemas/survey_question_possible_response_read_write_attributes"
    survey_question_possible_response_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/survey_question_possible_response_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/survey_question_possible_responses?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/survey_question_possible_responses?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/survey_question_possible_responses?page[number]=3
    survey_question_possible_response_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    survey_question_possible_response_read_write_attributes:
      type: object
      properties:
        position:
          type: integer
          example: 1
          description: The position this response appears in the list of responses.
          nullable: true
        name:
          type: string
          example: A possible response to a question
          description: The response to the question.
          nullable: true
        outro:
          type: string
          example: In the UI, a message to show after response
          description: A message to display after the response is selected.
          nullable: true
        tag_list:
          type: string
          example: comma,separated,tag,list
          description: List of tags to assign the signup after selecting this response.
          nullable: true
        survey_question_id:
          type: string
          example: '1'
          description: The survey question this response belongs to.
          nullable: true
    survey_question_possible_response_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: survey_question_possible_responses
        attributes:
          allOf:
          - "$ref": "#/components/schemas/survey_question_possible_response_read_write_attributes"
          - "$ref": "#/components/schemas/survey_question_possible_response_read_only_attributes"
    survey_question_possible_response_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/survey_question_possible_response_response_data"
    survey_question_possible_response_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: survey_question_possible_responses
            attributes:
              "$ref": "#/components/schemas/survey_question_possible_response_read_write_attributes"
    survey_question_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        published_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          description: When the question was published.
          format: datetime
          nullable: true
        position:
          type: integer
          example: 0
          description: The position this question appears in the list of survey questions.
          default: 0
          nullable: true
    survey_question_read_write_attributes:
      type: object
      properties:
        slug:
          type: string
          example: question_about_food
          description: Unique identifier for the survey question. Has a maximum length
            of 20 characters.
          nullable: true
        content:
          type: string
          example: What is your favorite food?
          description: The question being asked.
          nullable: true
        intro:
          type: string
          example: Please answer some questions about your favorite foods
          description: Short description of the question.
          nullable: true
        tag_list:
          type: string
          example: comma,separated,tag-list
          description: Tags to add to the signup after answering the question.
          nullable: true
        is_randomized:
          type: boolean
          example: false
          description: Displays responses in random order.
          default: true
          nullable: false
        survey_id:
          type: string
          example: '1'
          description: The survey this question belongs to.
          nullable: true
        status:
          type: string
          example: published
          enum:
          - archived
          - deleted
          - expired
          - hidden
          - published
          - rule_violated
          - unlisted
          nullable: true
        question_format:
          type: string
          example: multiple_choice
          description: The format of this question.
          enum:
          - multiple_choice
          - yes_no
          - text
          default: multiple_choice
          nullable: true
    survey_question_response_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: survey_question_responses
            attributes:
              "$ref": "#/components/schemas/survey_question_response_read_write_attributes"
    survey_question_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: survey_questions
        attributes:
          allOf:
          - "$ref": "#/components/schemas/survey_question_read_write_attributes"
          - "$ref": "#/components/schemas/survey_question_read_only_attributes"
    survey_question_response_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/survey_question_response_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/survey_question_responses?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/survey_question_responses?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/survey_question_responses?page[number]=3
    survey_question_response_read_only_attributes:
      type: object
      properties:
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        page_id:
          type: string
          example: '1'
          description: The page the survey belongs to, if any
          nullable: true
        is_skipped:
          type: boolean
          example: false
          nullable: true
    survey_question_response_read_write_attributes:
      type: object
      properties:
        survey_question_id:
          type: string
          example: '1'
          description: The survey question this response belongs to.
          nullable: true
        survey_question_possible_response_id:
          type: string
          example: '1'
          description: The response chosen by the signup.
          nullable: true
        signup_id:
          type: string
          example: '1'
          description: The signup that answered the survey.
          nullable: true
        author_id:
          type: string
          example: '1'
          description: The author of this response.
          nullable: true
        content:
          type: string
          example: Open ended question answer
          description: The response to a text question.
          nullable: true
        question_format:
          type: string
          example: multiple_choice
          description: The format of the question.
          enum:
          - multiple_choice
          - yes_no
          - text
          default: multiple_choice
          nullable: true
    survey_question_response_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: survey_question_responses
        attributes:
          allOf:
          - "$ref": "#/components/schemas/survey_question_response_read_write_attributes"
          - "$ref": "#/components/schemas/survey_question_response_read_only_attributes"
    survey_question_response_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/survey_question_response_response_data"
    survey_question_response_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: survey_question_responses
            attributes:
              "$ref": "#/components/schemas/survey_question_response_read_write_attributes"
    survey_question_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/survey_question_response_data"
    survey_question_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: survey_questions
            attributes:
              "$ref": "#/components/schemas/survey_question_read_write_attributes"
    survey_read_only_attributes:
      type: object
      properties:
        updated_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
        created_at:
          type: string
          example: '2019-10-26T10:00:00-04:00'
          format: datetime
          nullable: true
    survey_read_write_attributes:
      type: object
      properties:
        name:
          type: string
          example: Survey Name
          description: The name of the survey.
          nullable: true
    survey_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: surveys
        attributes:
          allOf:
          - "$ref": "#/components/schemas/survey_read_write_attributes"
          - "$ref": "#/components/schemas/survey_read_only_attributes"
    survey_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/survey_response_data"
    survey_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: surveys
            attributes:
              "$ref": "#/components/schemas/survey_read_write_attributes"
    voter_create_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              example: voters
            attributes:
              "$ref": "#/components/schemas/voter_read_write_attributes"
    voter_index_response:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/voter_response_data"
        links:
          type: object
          properties:
            links:
              type: object
              properties:
                self:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/voters?page[number]=2
                prev:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to previous page
                  example: https://nation_domain.com/api/v2/voters?page[number]=1
                next:
                  type: string
                  format: uri
                  nullable: true
                  description: Link to current page
                  example: https://nation_domain.com/api/v2/voters?page[number]=3
    voter_read_write_attributes:
      type: object
      properties:
        is_absentee_voter:
          type: boolean
          example: false
          description: The voter voted via absentee ballot.
          default: false
          nullable: false
        is_active_voter:
          type: boolean
          example: false
          description: The voter actively votes.
          default: false
          nullable: false
        is_dropped_from_file:
          type: boolean
          example: false
          description: When true this indicates the voter was in the file during the
            last refresh.
          default: false
          nullable: false
        is_early_voter:
          type: boolean
          example: false
          description: Voter votes before the election date.
          default: false
          nullable: false
        is_permanent_absentee_voter:
          type: boolean
          example: false
          description: Voter permanently votes via absentee ballot.
          default: false
          nullable: false
        signup_id:
          type: string
          example: '1'
          description: The voter resource's associated Signup ID
          nullable: false
    voter_response_data:
      type: object
      required:
      - type
      - id
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: voters
        attributes:
          "$ref": "#/components/schemas/voter_read_write_attributes"
    voter_show_response:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/voter_response_data"
    voter_update_request:
      type: object
      properties:
        data:
          type: object
          required:
          - type
          - id
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: voters
            attributes:
              "$ref": "#/components/schemas/voter_read_write_attributes"
  parameters:
    pagination_size:
      name: page[size]
      description: 'Number of results to display per page (default: 20, max: 100,
        min: 1)'
      in: query
      required: false
      schema:
        type: string
    pagination_number:
      name: page[number]
      description: Page number to list (starting at 1)
      in: query
      required: false
      schema:
        type: string
    automation_enrollment_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: automation, signup
      schema:
        type: string
    automation_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: (none)
      schema:
        type: string
    ballot_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: election, voter
      schema:
        type: string
    broadcaster_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: point_person, voicemail_point_person, text_point_person
      schema:
        type: string
    contact_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: signup, author
      schema:
        type: string
    custom_field_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: (none)
      schema:
        type: string
    donation_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, donation_tracking_code, import, membership, page, payment_type, pledge, mailing, recruiter, signup
      schema:
        type: string
    donation_tracking_code_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: (none)
      schema:
        type: string
    election_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: (none)
      schema:
        type: string
    event_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: auto_response_broadcaster, page, point_person, tracking_code
      schema:
        type: string
    event_rsvp_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, event, event_ticket_level, recruiter, signup
      schema:
        type: string
    event_ticket_level_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: event
      schema:
        type: string
    import_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: point_person, author, terminator
      schema:
        type: string
    list_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, signup, parent
      schema:
        type: string
    mailing_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author
      schema:
        type: string
    membership_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: membership_type, signup
      schema:
        type: string
    membership_type_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: page
      schema:
        type: string
    page_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: site
      schema:
        type: string
    path_history_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: current_step_point_person, path_journey, path_journey_status_change, point_person, recruiter
      schema:
        type: string
    path_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: default_point_person
      schema:
        type: string
    path_journey_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: signup, path, point_person, current_step_point_person, path_journey_status_change, current_step
      schema:
        type: string
    path_journey_status_change_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: path
      schema:
        type: string
    path_step_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: path, default_point_person
      schema:
        type: string
    petition_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: page
      schema:
        type: string
    petition_signature_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: page, petition, recruiter, signup
      schema:
        type: string
    pledge_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, donation_tracking_code, page, recruiter, signup
      schema:
        type: string
    precinct_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: point_person
      schema:
        type: string
    relationship_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: first_signup, second_signup
      schema:
        type: string
    signup_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter
      schema:
        type: string
    signup_profile_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: signup
      schema:
        type: string
    signup_tag_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: (none)
      schema:
        type: string
    signup_tagging_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: tag, signup
      schema:
        type: string
    site_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: (none)
      schema:
        type: string
    survey_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: (none)
      schema:
        type: string
    survey_question_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: survey, author
      schema:
        type: string
    survey_question_possible_response_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: survey_question
      schema:
        type: string
    survey_question_response_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: survey_question, survey_question_possible_response, signup, author, page
      schema:
        type: string
    voter_index_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: signup
      schema:
        type: string
    automation_enrollment_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: automation, signup
      schema:
        type: string
    automation_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: enrollments
      schema:
        type: string
    ballot_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: election, voter
      schema:
        type: string
    broadcaster_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: point_person, voicemail_point_person, text_point_person, mailings, signups
      schema:
        type: string
    contact_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: signup, author
      schema:
        type: string
    custom_field_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: (none)
      schema:
        type: string
    donation_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, donation_tracking_code, import, membership, page, payment_type, pledge, mailing, recruiter, signup
      schema:
        type: string
    donation_tracking_code_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: donations
      schema:
        type: string
    election_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: ballots
      schema:
        type: string
    event_rsvp_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, event, event_ticket_level, recruiter, signup
      schema:
        type: string
    event_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: auto_response_broadcaster, page, point_person, tracking_code, rsvps, event_ticket_levels
      schema:
        type: string
    event_ticket_level_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: event, event_rsvps
      schema:
        type: string
    import_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: point_person, author, terminator, signups
      schema:
        type: string
    list_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, signup, parent, mailings, lists
      schema:
        type: string
    mailing_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author
      schema:
        type: string
    membership_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: donations, membership_type, signup
      schema:
        type: string
    membership_type_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: page, memberships
      schema:
        type: string
    page_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: site, membership_types
      schema:
        type: string
    path_history_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: current_step_point_person, path_journey, path_journey_status_change, point_person, recruiter
      schema:
        type: string
    path_journey_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: signup, path, point_person, current_step_point_person, path_journey_status_change, current_step, path_histories
      schema:
        type: string
    path_journey_status_change_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: path, path_journeys, path_histories
      schema:
        type: string
    path_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: path_journeys, path_steps, path_journey_status_changes, default_point_person
      schema:
        type: string
    path_step_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: path, default_point_person
      schema:
        type: string
    petition_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: petition_signatures, page
      schema:
        type: string
    petition_signature_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: page, petition, recruiter, signup
      schema:
        type: string
    pledge_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, donation_tracking_code, page, recruiter, signup
      schema:
        type: string
    precinct_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: point_person, signups
      schema:
        type: string
    relationship_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: first_signup, second_signup
      schema:
        type: string
    signup_profile_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: signup
      schema:
        type: string
    signup_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter, signup_tags, memberships, path_journeys, taggings, petition_signatures
      schema:
        type: string
    signup_tag_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: taggings, signups
      schema:
        type: string
    signup_tagging_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: tag, signup
      schema:
        type: string
    site_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: pages
      schema:
        type: string
    survey_question_possible_response_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: survey_question, survey_question_responses
      schema:
        type: string
    survey_question_response_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: survey_question, survey_question_possible_response, signup, author, page
      schema:
        type: string
    survey_question_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: survey, author, survey_question_responses, survey_question_possible_responses
      schema:
        type: string
    survey_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: survey_questions
      schema:
        type: string
    voter_show_include:
      name: include
      in: query
      description: |
        Comma-delimited list of sideloaded resources to include as part of the response.
        See guidance [here](/api/v2/docs#overview--paginating-sideloads) about
        sideloading large numbers of resources and pagination.

        Supported sideloads: signup, ballots
      schema:
        type: string
    automation_enrollment_sparse_fields:
      name: fields[automation_enrollments]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    automation_sparse_fields:
      name: fields[automations]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    ballot_sparse_fields:
      name: fields[ballots]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    broadcaster_sparse_fields:
      name: fields[broadcasters]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    contact_sparse_fields:
      name: fields[contacts]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    custom_field_sparse_fields:
      name: fields[custom_fields]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    donation_sparse_fields:
      name: fields[donations]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    donation_tracking_code_sparse_fields:
      name: fields[donation_tracking_codes]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    election_sparse_fields:
      name: fields[elections]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    event_rsvp_sparse_fields:
      name: fields[event_rsvps]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    event_sparse_fields:
      name: fields[events]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    event_ticket_level_sparse_fields:
      name: fields[event_ticket_levels]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    import_sparse_fields:
      name: fields[imports]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    list_sparse_fields:
      name: fields[lists]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    mailing_sparse_fields:
      name: fields[mailings]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    membership_sparse_fields:
      name: fields[memberships]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    membership_type_sparse_fields:
      name: fields[membership_types]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    page_sparse_fields:
      name: fields[pages]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    path_history_sparse_fields:
      name: fields[path_histories]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    path_journey_sparse_fields:
      name: fields[path_journeys]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    path_journey_status_change_sparse_fields:
      name: fields[path_journey_status_changes]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    path_sparse_fields:
      name: fields[paths]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    path_step_sparse_fields:
      name: fields[path_steps]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    petition_signature_sparse_fields:
      name: fields[petition_signatures]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    petition_sparse_fields:
      name: fields[petitions]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    pledge_sparse_fields:
      name: fields[pledges]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    precinct_sparse_fields:
      name: fields[precincts]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    relationship_sparse_fields:
      name: fields[relationships]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    signup_profile_sparse_fields:
      name: fields[signup_profiles]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    signup_sparse_fields:
      name: fields[signups]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    signup_tag_sparse_fields:
      name: fields[signup_tags]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    signup_tagging_sparse_fields:
      name: fields[signup_taggings]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    site_sparse_fields:
      name: fields[sites]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    survey_question_possible_response_sparse_fields:
      name: fields[survey_question_possible_responses]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    survey_question_response_sparse_fields:
      name: fields[survey_question_responses]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    survey_question_sparse_fields:
      name: fields[survey_questions]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    survey_sparse_fields:
      name: fields[surveys]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    voter_sparse_fields:
      name: fields[voters]
      in: query
      required: false
      description: Comma-delimited list of attributes to only return in the response
      schema:
        type: string
    automation_extra_fields:
      name: extra_fields[automations]
      in: query
      description: 'Comma-delimited list of extra attributes, which are only returned
        in the response if requested. Extract attributes for this resource: total_enrollments_count,
        removed_enrollments_count, completed_enrollments_count, converted_enrollments_count,
        conversions_enabled'
      required: false
      schema:
        type: string
    donation_extra_fields:
      name: extra_fields[donations]
      in: query
      description: 'Comma-delimited list of extra attributes, which are only returned
        in the response if requested. Extract attributes for this resource: billing_address,
        work_address'
      required: false
      schema:
        type: string
    event_extra_fields:
      name: extra_fields[events]
      in: query
      description: 'Comma-delimited list of extra attributes, which are only returned
        in the response if requested. Extract attributes for this resource: venue_address'
      required: false
      schema:
        type: string
    mailing_extra_fields:
      name: extra_fields[mailings]
      in: query
      description: 'Comma-delimited list of extra attributes, which are only returned
        in the response if requested. Extract attributes for this resource: body_html,
        body_html_parsed'
      required: false
      schema:
        type: string
    signup_extra_fields:
      name: extra_fields[signups]
      in: query
      description: 'Comma-delimited list of extra attributes, which are only returned
        in the response if requested. Extract attributes for this resource: billing_address,
        mailing_address, home_address, primary_address, registered_address, user_submitted_address,
        work_address, profile_image_url'
      required: false
      schema:
        type: string
    signup_nearby_custom_filter:
      name: filter[nearby]
      in: query
      required: false
      schema:
        type: string
      description: 'Filter signups by location (lat, long) and distance from the location
        in miles. Format for the parameter value is {"location": "90.0,-180.0", "distance":
        15}. If a distance is not provided, signups within 1 mile from the location
        will be returned.'
    signup_page_id_custom_filter:
      name: filter[page_id]
      in: query
      required: false
      schema:
        type: string
      description: Filters Signups by page_id, the id of the page they signed up from.
    signup_tag_id_custom_filter:
      name: filter[tag_id]
      in: query
      required: false
      schema:
        type: string
    signup_tag_signup_id_custom_filter:
      name: filter[signup_id]
      in: query
      required: false
      schema:
        type: string
    signup_with_bouncing_email_custom_filter:
      name: filter[with_bouncing_email]
      in: query
      required: false
      schema:
        type: boolean
      description: Filter signups with bounced email addresses. When the value is
        true the filter returns signups that do have an email address marked as bounced.
        When the value is false the filter returns signups that do not have an email
        address marked as bounced
    signup_with_email_address_custom_filter:
      name: filter[with_email_address]
      in: query
      required: false
      schema:
        type: string
      description: 'Filters signups by their associated email addresses. This filter
        will accept one of the following as a parameter: [eq, match, not_match, prefix,
        not_prefix, suffix, not_suffix]. The value is the email address to filter
        on.'
tags:
- name: Async Processes
  x-tag-expanded: false
  description: This endpoint is used to get information about deferred or asynchronous
    processes returned by other endpoints such as adding and removing signups from
    a list or tagging and untagging signups from a list. Other endpoints in the future
    may use a deferred model as well.
- name: Automation Enrollments
  x-tag-expanded: false
  description: AutomationEnrollments link signups to automations. Every AutomationEnrollment
    belongs to a single Signup and a single Automation. Further information on how
    signups are enrolled in automations is available [here](https://support.nationbuilder.com/en/articles/6680735-create-an-automation#h_2783ee4e5c).
- name: Automations
  x-tag-expanded: false
  description: Automations represent workflows where chains of actions and reactions
    can be created within a nation. Signups can be enrolled in an automation and are
    represented via the AutomationEnrollments resource. Further information available
    [here](https://support.nationbuilder.com/en/articles/6680735-create-an-automation).
- name: Ballots
  x-tag-expanded: false
  description: Ballots are a record of an election and how a person voted for said
    election. Each ballot is associated with a voter and an election and contains
    information such as when the ballot was cast, the party, and vote method. Further
    information about vote history and ballots available [here](https://support.nationbuilder.com/en/articles/2471330-import-vote-history).
- name: Broadcasters
  x-tag-expanded: false
  description: Broadcasters are the voices who speak publicly on behalf of your nation.
    All external communications are organized around broadcasters.
- name: Contacts
  x-tag-expanded: false
  description: |
    Contacts are logged interactions between people in your nation. More information about contacts and the fields found in the
    UI and API interfaces can be found [here](https://support.nationbuilder.com/en/articles/2306309-logging-contacts).
- name: Custom Fields
  x-tag-expanded: false
  description: Custom fields are available for Signups and Donations. See [here](https://support.nationbuilder.com/en/articles/2340612-introduction-to-custom-fields)
    for more information.
- name: Donation Tracking Codes
  x-tag-expanded: false
  description: Tracking codes are used to identify where a financial transaction came
    from. Users give the tracking code a custom name/slug and use the code to track
    where a donation was made. Read more about them [here](https://support.nationbuilder.com/en/articles/2344337-understanding-tracking-codes).
- name: Donations
  x-tag-expanded: false
  description: |
    Currently we allow you to record existing donation transactions via API V2. These transactions will not be backed by any kind of financial transaction.
    See the [docs](https://support.nationbuilder.com/en/articles/2344242-create-or-record-an-individual-donation) for more information.

    If associated with an existing signup, the first_name, middle_name, and last_name associated with the donation will be updated on the signup as well.
    If the email is different than the primary email existing on the signup, it will be added to the signup's email2, email3, or email4 instead.
- name: Elections
  x-tag-expanded: false
  description: Elections are available on nations with voter features enabled. See
    more information about election functionality [here](https://support.nationbuilder.com/en/articles/2362732-set-up-your-election)
- name: Event Rsvps
  x-tag-expanded: false
  description: This resource is for creating, reading, updating, and deleting Event
    RSVPs. When creating event RSVPs, the rsvp must be given signup data, either by
    passing a first name, last name, and email or phone number, or by sideposting
    a signup.
- name: Event Ticket Levels
  x-tag-expanded: false
  description: This resource is for creating, reading, updating, and deleting ticket
    levels for events. manage the ticket levels available for the events. Ticket levels
    and their prices are displayed on public events. More information on ticketed
    events in NationBuilder can be found [here](https://support.nationbuilder.com/en/articles/2319673-setting-up-an-event#ticketed-events)
- name: Events
  x-tag-expanded: false
  description: Resource used for managing event data associated with event pages.
    More details on events within NationBuilder can be found [here](https://support.nationbuilder.com/en/articles/2319673-setting-up-an-event)
- name: Imports
  x-tag-expanded: false
  description: All kinds of data can be imported into a nation, when this happens
    we create an import resource as a record of the imported data. Each import has
    a type attribute defining the kind of data being imported. Find more information
    on imports and import types [here](https://support.nationbuilder.com/en/articles/2309526-types-of-imports).
    This version of the imports API does not currently support creating or archiving
    imports. Please use the v1 Imports API for this functionality [here](https://nationbuilder.com/imports_api).
- name: Lists
  x-tag-expanded: false
  description: Lists are collections of signups. Often created from filters they are
    useful for grouping signups together by common attributes. They can be used to
    perform batch updates on signups or as a list of recipients for a mailing blast.
    Read more on what you can do with lists [here](https://support.nationbuilder.com/en/articles/2305947-create-a-list).
- name: Mailings
  x-tag-expanded: false
  description: Referred to as email blasts, mailings send bulk emails to a group of
    signups at once. Mailings belong to and are sent via a broadcaster. The recipients
    of a mailing can be selected by lists, filters, or tags. Find more on how to use
    mailings [here](https://support.nationbuilder.com/en/articles/8077751-create-an-email-blast).
- name: Membership Types
  x-tag-expanded: false
  description: Membership types are used to identify memberships assigned to signups.
    A membership type has many memberships which are assigned a single signup. The
    only required attribute for the membership type is a name, then signups can be
    given memberships with the newly created type. Read more on membership types [here](https://support.nationbuilder.com/en/articles/2362753-set-up-memberships#create-a-new-membership-type).
- name: Memberships
  x-tag-expanded: false
  description: |
    A membership is a way to organize supporters and provide additional benefits based on actions they've taken or money donated.
    More information about memberships and the fields found in the UI and API interfaces can be found [here](https://support.nationbuilder.com/en/articles/2362753-set-up-memberships)

    By default, autoresponses when updating a membership are not triggered. Set the `trigger_autoresponses` param to `true` to trigger autoresponses on update.
- name: Pages
  x-tag-expanded: false
  description: Pages are published on your site. Each page type offers different features,
    you can view them [here](https://support.nationbuilder.com/en/articles/2319593-types-of-nationbuilder-pages).
- name: Path Histories
  x-tag-expanded: false
  description: Documents a signup's step along a path journey.
- name: Path Journey Status Changes
  x-tag-expanded: false
  description: Documents the status change of a path journey.
- name: Path Journeys
  x-tag-expanded: false
  description: Path journeys are the relationship between signups and paths. Further
    information available [here](https://support.nationbuilder.com/en/articles/3055899-create-paths#create-a-path).
- name: Path Steps
  x-tag-expanded: false
  description: Path steps name the positions within a path a signup can be assigned
    to. Further information available [here](https://support.nationbuilder.com/en/articles/3055899-create-paths#add-steps-to-the-path)
- name: Paths
  x-tag-expanded: false
  description: Paths store information about path journeys and steps. They are related
    to signups via path journeys. A path can be assigned many path journeys and path
    steps. Further information available [here](https://support.nationbuilder.com/en/articles/3055899-create-paths).
- name: Petition Signatures
  x-tag-expanded: false
  description: Petition signatures are the relationship between petitions and signups.
- name: Petitions
  x-tag-expanded: false
  description: Petitions are pages on your site that can be signed and shared by your
    supporters. Learn more about them [here](https://support.nationbuilder.com/en/articles/2327303-create-a-petition).
- name: Pledges
  x-tag-expanded: false
  description: Pledges are a promise from a signup to donate to your cause. These
    are not donations. Further information available [here](https://support.nationbuilder.com/en/articles/2344197-fundraising-with-nationbuilder).
- name: Precincts
  x-tag-expanded: false
  description: Precincts are districts used by political campaigns. Read more about
    them [here](https://support.nationbuilder.com/en/articles/2471652-creating-and-viewing-political-precincts).
- name: Relationships
  x-tag-expanded: false
  description: Valid relationship types are ["affiliate-affiliate", "alum-school",
    "assistant-assisted", "board_member-organization", "candidate-committee", "chapter-parent",
    "child-parent", "consultant-organization", "employee-employer", "family_partner-family_partner",
    "friend-friend", "member-organization", "mentee-mentor", "partner-partner", "primary_contact-organization",
    "relative-relative", "representative-constituent", "resident-organization", "sibling-sibling",
    "spouse-spouse", "student-school", "student-teacher", "subordinate-manager", "subsidiary-parent",
    "treasurer-committee"]. first_signup_id corresponds with the ID of the signup
    on the first role listed, and second_signup_id corresponds with the ID of the
    signup on the second role listed in the relationship type."
- name: Signup Profiles
  x-tag-expanded: false
  description: Profile information for a signup that can be displayed on a public
    site page. Read more on public profiles [here](https://support.nationbuilder.com/en/articles/2327657-how-public-profile-pages-work).
- name: Signup Taggings
  x-tag-expanded: false
  description: Signup taggings are the relation between a signup and a tag.
- name: Signup Tags
  x-tag-expanded: false
  description: Tags are used to quickly identify signups by certain characteristics.
    They are related to signups through SignupTaggings. Read more about them [here](https://support.nationbuilder.com/en/articles/2305680-how-to-use-tags).
- name: Signups
  x-tag-expanded: false
  description: Signups store information about people in your nation. Further information
    available [here](https://support.nationbuilder.com/en/articles/8810042-how-records-are-added-to-the-people-database).
- name: Sites
  x-tag-expanded: false
  description: A site is how supporters interact with your nation. Each site has a
    theme and many pages that can be drafted and published later to be viewed publicly.
    Read more about sites [here](https://support.nationbuilder.com/en/articles/2363313-set-up-your-website-for-success).
- name: Survey Question Possible Responses
  x-tag-expanded: false
  description: The potential answers to a survey question.
- name: Survey Question Responses
  x-tag-expanded: false
  description: User responses to Survey Questions.
- name: Survey Questions
  x-tag-expanded: false
  description: Questions asked within a survey.
- name: Surveys
  x-tag-expanded: false
  description: Surveys have questions with possible responses. These questions also
    have responses from the users.
- name: Voters
  x-tag-expanded: false
  description: Voter records store the ballot history of a single signup.
